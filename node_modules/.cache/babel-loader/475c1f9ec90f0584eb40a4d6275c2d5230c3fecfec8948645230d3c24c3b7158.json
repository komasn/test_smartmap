{"ast":null,"code":"import turfBBox from \"@turf/bbox\";\nimport LiveDataSet from \"./lib/live_data_set\";\nclass CityOS__Takamatsu {\n  constructor(map) {\n    this.map = void 0;\n    this.liveDataSets = void 0;\n    this.map = map;\n    this.liveDataSets = [];\n  }\n  addLiveDataSet(id, options) {\n    const internalId = `cityos-kawaga-takamatsu-${id}`;\n    const mapSourceId = `gl-live-data-${id}`;\n    const existingLds = this.liveDataSets.find(lds => lds.id === internalId);\n    if (typeof existingLds !== 'undefined') {\n      // this live data set is already added to the map\n      return mapSourceId;\n    }\n    const lds = new LiveDataSet(internalId);\n    const stayFitToBounds = !!(options !== null && options !== void 0 && options.stayFitToBounds);\n    this.map.addSource(mapSourceId, {\n      type: 'geojson',\n      data: {\n        type: \"FeatureCollection\",\n        features: []\n      }\n    });\n    lds.addEventListener('featuresUpdated', _event => {\n      const event = _event;\n      const features = event.detail.features.map(feature => {\n        const props = {\n          ...feature.properties\n        };\n        // props.class = options?.layerName || 'undefined';\n        // props._viewer_selectable = true;\n        delete props.tilehash;\n        delete props.ttl;\n        delete props.coords;\n        feature.properties = props;\n        return options !== null && options !== void 0 && options.featureFilter ? options.featureFilter(feature) : feature;\n      });\n      const data = {\n        type: \"FeatureCollection\",\n        features\n      };\n      this.map.getSource(mapSourceId).setData(data);\n      if (stayFitToBounds && data.features.length > 0) {\n        const bbox = turfBBox(data);\n        // we only have 2d data in here\n        if (bbox.length === 4) {\n          this.map.fitBounds(bbox, {\n            maxZoom: 13,\n            padding: 100,\n            animate: false\n          });\n        }\n      }\n    });\n    this.liveDataSets.push(lds);\n    return mapSourceId;\n  }\n  removeLiveDataSet(id) {\n    const sourceId = `gl-live-data-${id}`;\n    const internalId = `cityos-kawaga-takamatsu-${id}`;\n    const liveDataSetIndex = this.liveDataSets.findIndex(lds => lds.id === internalId);\n    if (liveDataSetIndex === -1) return;\n    for (const layer of this.map.getStyle().layers) {\n      if ('source' in layer && layer.source === sourceId) {\n        this.map.removeLayer(layer.id);\n      }\n    }\n    this.map.removeSource(sourceId);\n    const [lds] = this.liveDataSets.splice(liveDataSetIndex, 1);\n    lds.remove();\n  }\n}\nexport default CityOS__Takamatsu;","map":{"version":3,"names":["turfBBox","LiveDataSet","CityOS__Takamatsu","constructor","map","liveDataSets","addLiveDataSet","id","options","internalId","mapSourceId","existingLds","find","lds","stayFitToBounds","addSource","type","data","features","addEventListener","_event","event","detail","feature","props","properties","tilehash","ttl","coords","featureFilter","getSource","setData","length","bbox","fitBounds","maxZoom","padding","animate","push","removeLiveDataSet","sourceId","liveDataSetIndex","findIndex","layer","getStyle","layers","source","removeLayer","removeSource","splice","remove"],"sources":["/home/magari/git/test_smartmap/src/cityos/cityos_takamatsu.ts"],"sourcesContent":["import type { Map as GeoloniaMap, GeoJSONSource } from \"maplibre-gl\";\nimport turfBBox from \"@turf/bbox\";\nimport LiveDataSet, { LiveDataSetEvent } from \"./lib/live_data_set\";\n\ntype FeatureFilter = (feature: GeoJSON.Feature) => GeoJSON.Feature;\n\nclass CityOS__Takamatsu {\n  map: GeoloniaMap;\n  liveDataSets: LiveDataSet[];\n\n  constructor(map: GeoloniaMap) {\n    this.map = map;\n    this.liveDataSets = [];\n  }\n\n  addLiveDataSet(id: string, options?: { featureFilter?: FeatureFilter, stayFitToBounds?: boolean }) {\n    const internalId = `cityos-kawaga-takamatsu-${id}`;\n    const mapSourceId = `gl-live-data-${id}`;\n\n    const existingLds = this.liveDataSets.find(lds => lds.id === internalId);\n    if (typeof existingLds !== 'undefined') {\n      // this live data set is already added to the map\n      return mapSourceId;\n    }\n    const lds = new LiveDataSet(internalId);\n    const stayFitToBounds = !!options?.stayFitToBounds;\n\n    this.map.addSource(mapSourceId, {\n      type: 'geojson',\n      data: { type: \"FeatureCollection\", features: [] },\n    });\n\n    lds.addEventListener('featuresUpdated', (_event) => {\n      const event = _event as LiveDataSetEvent;\n      const features = event.detail.features.map(feature => {\n        const props = {...feature.properties};\n        // props.class = options?.layerName || 'undefined';\n        // props._viewer_selectable = true;\n        delete props.tilehash;\n        delete props.ttl;\n        delete props.coords;\n        feature.properties = props;\n        return options?.featureFilter ? options.featureFilter(feature) : feature;\n      });\n      const data: GeoJSON.FeatureCollection = {type: \"FeatureCollection\", features};\n      (this.map.getSource(mapSourceId) as GeoJSONSource).setData(data);\n      if (stayFitToBounds && data.features.length > 0) {\n        const bbox = turfBBox(data);\n        // we only have 2d data in here\n        if (bbox.length === 4) {\n          this.map.fitBounds(bbox, { maxZoom: 13, padding: 100, animate: false });\n        }\n      }\n    });\n    this.liveDataSets.push(lds);\n\n    return mapSourceId;\n  }\n\n  removeLiveDataSet(id: string) {\n    const sourceId = `gl-live-data-${id}`;\n    const internalId = `cityos-kawaga-takamatsu-${id}`;\n    const liveDataSetIndex = this.liveDataSets.findIndex((lds) => lds.id === internalId);\n    if (liveDataSetIndex === -1) return;\n\n    for (const layer of this.map.getStyle().layers) {\n      if ('source' in layer && layer.source === sourceId) {\n        this.map.removeLayer(layer.id);\n      }\n    }\n    this.map.removeSource(sourceId);\n    const [lds] = this.liveDataSets.splice(liveDataSetIndex, 1);\n    lds.remove();\n  }\n}\n\nexport default CityOS__Takamatsu;\n"],"mappings":"AACA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAA4B,qBAAqB;AAInE,MAAMC,iBAAiB,CAAC;EAItBC,WAAWA,CAACC,GAAgB,EAAE;IAAA,KAH9BA,GAAG;IAAA,KACHC,YAAY;IAGV,IAAI,CAACD,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,YAAY,GAAG,EAAE;EACxB;EAEAC,cAAcA,CAACC,EAAU,EAAEC,OAAsE,EAAE;IACjG,MAAMC,UAAU,GAAI,2BAA0BF,EAAG,EAAC;IAClD,MAAMG,WAAW,GAAI,gBAAeH,EAAG,EAAC;IAExC,MAAMI,WAAW,GAAG,IAAI,CAACN,YAAY,CAACO,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACN,EAAE,KAAKE,UAAU,CAAC;IACxE,IAAI,OAAOE,WAAW,KAAK,WAAW,EAAE;MACtC;MACA,OAAOD,WAAW;IACpB;IACA,MAAMG,GAAG,GAAG,IAAIZ,WAAW,CAACQ,UAAU,CAAC;IACvC,MAAMK,eAAe,GAAG,CAAC,EAACN,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEM,eAAe;IAElD,IAAI,CAACV,GAAG,CAACW,SAAS,CAACL,WAAW,EAAE;MAC9BM,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE;QAAED,IAAI,EAAE,mBAAmB;QAAEE,QAAQ,EAAE;MAAG;IAClD,CAAC,CAAC;IAEFL,GAAG,CAACM,gBAAgB,CAAC,iBAAiB,EAAGC,MAAM,IAAK;MAClD,MAAMC,KAAK,GAAGD,MAA0B;MACxC,MAAMF,QAAQ,GAAGG,KAAK,CAACC,MAAM,CAACJ,QAAQ,CAACd,GAAG,CAACmB,OAAO,IAAI;QACpD,MAAMC,KAAK,GAAG;UAAC,GAAGD,OAAO,CAACE;QAAU,CAAC;QACrC;QACA;QACA,OAAOD,KAAK,CAACE,QAAQ;QACrB,OAAOF,KAAK,CAACG,GAAG;QAChB,OAAOH,KAAK,CAACI,MAAM;QACnBL,OAAO,CAACE,UAAU,GAAGD,KAAK;QAC1B,OAAOhB,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEqB,aAAa,GAAGrB,OAAO,CAACqB,aAAa,CAACN,OAAO,CAAC,GAAGA,OAAO;MAC1E,CAAC,CAAC;MACF,MAAMN,IAA+B,GAAG;QAACD,IAAI,EAAE,mBAAmB;QAAEE;MAAQ,CAAC;MAC5E,IAAI,CAACd,GAAG,CAAC0B,SAAS,CAACpB,WAAW,CAAC,CAAmBqB,OAAO,CAACd,IAAI,CAAC;MAChE,IAAIH,eAAe,IAAIG,IAAI,CAACC,QAAQ,CAACc,MAAM,GAAG,CAAC,EAAE;QAC/C,MAAMC,IAAI,GAAGjC,QAAQ,CAACiB,IAAI,CAAC;QAC3B;QACA,IAAIgB,IAAI,CAACD,MAAM,KAAK,CAAC,EAAE;UACrB,IAAI,CAAC5B,GAAG,CAAC8B,SAAS,CAACD,IAAI,EAAE;YAAEE,OAAO,EAAE,EAAE;YAAEC,OAAO,EAAE,GAAG;YAAEC,OAAO,EAAE;UAAM,CAAC,CAAC;QACzE;MACF;IACF,CAAC,CAAC;IACF,IAAI,CAAChC,YAAY,CAACiC,IAAI,CAACzB,GAAG,CAAC;IAE3B,OAAOH,WAAW;EACpB;EAEA6B,iBAAiBA,CAAChC,EAAU,EAAE;IAC5B,MAAMiC,QAAQ,GAAI,gBAAejC,EAAG,EAAC;IACrC,MAAME,UAAU,GAAI,2BAA0BF,EAAG,EAAC;IAClD,MAAMkC,gBAAgB,GAAG,IAAI,CAACpC,YAAY,CAACqC,SAAS,CAAE7B,GAAG,IAAKA,GAAG,CAACN,EAAE,KAAKE,UAAU,CAAC;IACpF,IAAIgC,gBAAgB,KAAK,CAAC,CAAC,EAAE;IAE7B,KAAK,MAAME,KAAK,IAAI,IAAI,CAACvC,GAAG,CAACwC,QAAQ,CAAC,CAAC,CAACC,MAAM,EAAE;MAC9C,IAAI,QAAQ,IAAIF,KAAK,IAAIA,KAAK,CAACG,MAAM,KAAKN,QAAQ,EAAE;QAClD,IAAI,CAACpC,GAAG,CAAC2C,WAAW,CAACJ,KAAK,CAACpC,EAAE,CAAC;MAChC;IACF;IACA,IAAI,CAACH,GAAG,CAAC4C,YAAY,CAACR,QAAQ,CAAC;IAC/B,MAAM,CAAC3B,GAAG,CAAC,GAAG,IAAI,CAACR,YAAY,CAAC4C,MAAM,CAACR,gBAAgB,EAAE,CAAC,CAAC;IAC3D5B,GAAG,CAACqC,MAAM,CAAC,CAAC;EACd;AACF;AAEA,eAAehD,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}