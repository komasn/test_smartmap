{"ast":null,"code":"var _jsxFileName = \"/home/magari/git/test_smartmap/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport MainMap from './MainMap';\n\n// import type * as maplibregl from 'maplibre-gl';\n\nimport './App.scss';\nimport { useQuery } from 'react-query';\nimport { getCatalog } from './api/catalog';\nimport SidebarDetail from './SidebarDetail';\nimport { useMediaQuery } from 'react-responsive';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const catalog = useQuery('catalog', getCatalog);\n  const [selectedLayers, setSelectedLayers] = useState([]);\n  const [selectedFeatures, setSelectedFeatures] = useState([]);\n\n  // TODO: https://github.com/takamatsu-city/maps.takamatsu-fact.com/issues/89 修正時に 初期値を true に変更する\n  const isDesktop = useMediaQuery({\n    query: '(min-width: 769px)'\n  });\n  const [isOpenedSidebar, setIsOpenedSidebar] = useState(isDesktop);\n  const catalogSuccess = catalog.isSuccess;\n  const catalogData = catalog.data;\n  useEffect(() => {\n    if (!catalogSuccess || !catalogData) {\n      return;\n    }\n\n    // setSelectedLayers(catalogData.map(item => item.class));\n  }, [catalogSuccess, catalogData, setSelectedLayers]);\n\n  // useEffect(() => {\n  //   console.log(selectedLayers);\n  // }, [selectedLayers]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        catalogData: catalog.data || [],\n        selectedLayers: selectedLayers,\n        isOpenedSidebar: isOpenedSidebar,\n        setIsOpenedSidebar: setIsOpenedSidebar,\n        setSelectedLayers: setSelectedLayers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: [selectedFeatures.length > 0 && /*#__PURE__*/_jsxDEV(SidebarDetail, {\n          selected: selectedFeatures,\n          setSelected: setSelectedFeatures\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(MainMap, {\n          catalogData: catalog.data || [],\n          selectedLayers: selectedLayers,\n          setSelectedFeatures: setSelectedFeatures\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Si3zl1ReB4OjFZftVMlZiNAyMNA=\", false, function () {\n  return [useQuery, useMediaQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Header","Sidebar","MainMap","useQuery","getCatalog","SidebarDetail","useMediaQuery","jsxDEV","_jsxDEV","App","_s","catalog","selectedLayers","setSelectedLayers","selectedFeatures","setSelectedFeatures","isDesktop","query","isOpenedSidebar","setIsOpenedSidebar","catalogSuccess","isSuccess","catalogData","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","selected","setSelected","_c","$RefreshReg$"],"sources":["/home/magari/git/test_smartmap/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Header from './Header'\nimport Sidebar from './Sidebar'\nimport MainMap from './MainMap'\n\n// import type * as maplibregl from 'maplibre-gl';\n\nimport './App.scss';\nimport { useQuery } from 'react-query';\nimport { CatalogFeature, getCatalog } from './api/catalog';\nimport SidebarDetail from './SidebarDetail';\nimport { useMediaQuery } from 'react-responsive'\n\nfunction App() {\n  const catalog = useQuery('catalog', getCatalog);\n  const [selectedLayers, setSelectedLayers] = useState<string[]>([]);\n  const [selectedFeatures, setSelectedFeatures] = useState<CatalogFeature[]>([]);\n\n  // TODO: https://github.com/takamatsu-city/maps.takamatsu-fact.com/issues/89 修正時に 初期値を true に変更する\n  const isDesktop = useMediaQuery({ query: '(min-width: 769px)' })\n  const [isOpenedSidebar, setIsOpenedSidebar] = useState<boolean>(isDesktop);\n\n  const catalogSuccess = catalog.isSuccess;\n  const catalogData = catalog.data;\n  useEffect(() => {\n    if (!catalogSuccess || !catalogData) {\n      return;\n    }\n\n    // setSelectedLayers(catalogData.map(item => item.class));\n  }, [ catalogSuccess, catalogData, setSelectedLayers ]);\n\n  // useEffect(() => {\n  //   console.log(selectedLayers);\n  // }, [selectedLayers]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"container\">\n        <Sidebar\n          catalogData={catalog.data || []}\n          selectedLayers={selectedLayers}\n          isOpenedSidebar={isOpenedSidebar}\n          setIsOpenedSidebar={setIsOpenedSidebar}\n          setSelectedLayers={setSelectedLayers}\n        />\n        <div className=\"map-container\">\n          { selectedFeatures.length > 0 && <SidebarDetail\n            selected={selectedFeatures}\n            setSelected={setSelectedFeatures}\n          /> }\n          <MainMap\n            catalogData={catalog.data || []}\n            selectedLayers={selectedLayers}\n            setSelectedFeatures={setSelectedFeatures}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}