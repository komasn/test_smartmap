{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/magari/git/test_smartmap/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _regeneratorRuntime from\"/home/magari/git/test_smartmap/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/magari/git/test_smartmap/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _marked=/*#__PURE__*/_regeneratorRuntime().mark(walkCategories);export var getCatalog=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var res,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('./api/catalog.json');case 2:res=_context.sent;_context.next=5;return res.json();case 5:data=_context.sent;return _context.abrupt(\"return\",data);case 7:case\"end\":return _context.stop();}},_callee);}));return function getCatalog(){return _ref.apply(this,arguments);};}();export function walkCategories(data){var _iterator,_step,x;return _regeneratorRuntime().wrap(function walkCategories$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_iterator=_createForOfIteratorHelper(data);_context2.prev=1;_iterator.s();case 3:if((_step=_iterator.n()).done){_context2.next=13;break;}x=_step.value;if(!(x.type===\"Category\")){_context2.next=9;break;}return _context2.delegateYield(walkCategories(x.items),\"t0\",7);case 7:_context2.next=11;break;case 9:_context2.next=11;return x;case 11:_context2.next=3;break;case 13:_context2.next=18;break;case 15:_context2.prev=15;_context2.t1=_context2[\"catch\"](1);_iterator.e(_context2.t1);case 18:_context2.prev=18;_iterator.f();return _context2.finish(18);case 21:case\"end\":return _context2.stop();}},_marked,null,[[1,15,18,21]]);}","map":{"version":3,"names":["walkCategories","getCatalog","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","data","wrap","_callee$","_context","prev","next","fetch","sent","json","abrupt","stop","apply","arguments","_iterator","_step","x","walkCategories$","_context2","_createForOfIteratorHelper","s","n","done","value","type","delegateYield","items","t1","e","f","finish","_marked"],"sources":["/home/magari/git/test_smartmap/src/api/catalog.ts"],"sourcesContent":["export type CatalogFeature = {\n  catalog: CatalogDataItem\n  properties: Record<string, any>\n}\n\nexport type CatalogVectorDataItem = {\n  type: \"DataItem\"\n  id: string\n  name: string\n  class: string\n  metadata: Record<string, string>\n}\n\nexport type CatalogCustomSourceVectorDataItem = {\n  type: \"DataItem\"\n  id: string\n  name: string\n  customDataSource: string\n  customDataSourceLayer?: string\n  class?: string\n  metadata: Record<string, string>\n}\n\nexport type CatalogGeoJSONDataItem = {\n  type: \"DataItem\"\n  id: string\n  name: string\n  class: string\n  geojsonEndpoint: string\n  metadata: Record<string, string>\n}\n\nexport type CatalogLiveLocationDataItem = {\n  type: \"DataItem\"\n  id: string\n  name: string\n  class: string\n  liveLocationId: string\n  metadata: Record<string, string>\n}\n\nexport type CatalogDataItem = CatalogVectorDataItem | CatalogCustomSourceVectorDataItem | CatalogGeoJSONDataItem | CatalogLiveLocationDataItem;\n\nexport type CatalogCategory = {\n  type: \"Category\"\n  id: string\n  name: string\n  items: CatalogItem[]\n}\n\nexport type CatalogItem = CatalogDataItem | CatalogCategory\n\nexport const getCatalog: () => Promise<CatalogItem[]> = async () => {\n  const res = await fetch('./api/catalog.json');\n  const data: CatalogItem[] = await res.json();\n  return data;\n}\n\nexport function *walkCategories(data: CatalogItem[]): Generator<CatalogDataItem, void, unknown> {\n  for (const x of data) {\n    if (x.type === \"Category\") {\n      yield *walkCategories(x.items);\n    } else {\n      yield x;\n    }\n  }\n}\n"],"mappings":"wbA0DiBA,cAAc,EAN/B,MAAO,IAAM,CAAAC,UAAwC,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,GAAA,CAAAC,IAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACpC,CAAAC,KAAK,CAAC,oBAAoB,CAAC,QAAvCP,GAAG,CAAAI,QAAA,CAAAI,IAAA,CAAAJ,QAAA,CAAAE,IAAA,SACyB,CAAAN,GAAG,CAACS,IAAI,CAAC,CAAC,QAAtCR,IAAmB,CAAAG,QAAA,CAAAI,IAAA,QAAAJ,QAAA,CAAAM,MAAA,UAClBT,IAAI,0BAAAG,QAAA,CAAAO,IAAA,MAAAZ,OAAA,GACZ,kBAJY,CAAAL,UAAwCA,CAAA,SAAAC,IAAA,CAAAiB,KAAA,MAAAC,SAAA,OAIpD,CAED,MAAO,SAAU,CAAApB,cAAcA,CAACQ,IAAmB,MAAAa,SAAA,CAAAC,KAAA,CAAAC,CAAA,QAAAnB,mBAAA,GAAAK,IAAA,UAAAe,gBAAAC,SAAA,iBAAAA,SAAA,CAAAb,IAAA,CAAAa,SAAA,CAAAZ,IAAA,SAAAQ,SAAA,CAAAK,0BAAA,CACjClB,IAAI,EAAAiB,SAAA,CAAAb,IAAA,GAAAS,SAAA,CAAAM,CAAA,cAAAL,KAAA,CAAAD,SAAA,CAAAO,CAAA,IAAAC,IAAA,EAAAJ,SAAA,CAAAZ,IAAA,WAATU,CAAC,CAAAD,KAAA,CAAAQ,KAAA,MACNP,CAAC,CAACQ,IAAI,GAAK,UAAU,GAAAN,SAAA,CAAAZ,IAAA,UACvB,OAAAY,SAAA,CAAAO,aAAA,CAAOhC,cAAc,CAACuB,CAAC,CAACU,KAAK,CAAC,gBAAAR,SAAA,CAAAZ,IAAA,iBAAAY,SAAA,CAAAZ,IAAA,IAE9B,MAAM,CAAAU,CAAC,SAAAE,SAAA,CAAAZ,IAAA,iBAAAY,SAAA,CAAAZ,IAAA,kBAAAY,SAAA,CAAAb,IAAA,IAAAa,SAAA,CAAAS,EAAA,CAAAT,SAAA,aAAAJ,SAAA,CAAAc,CAAA,CAAAV,SAAA,CAAAS,EAAA,UAAAT,SAAA,CAAAb,IAAA,IAAAS,SAAA,CAAAe,CAAA,UAAAX,SAAA,CAAAY,MAAA,8BAAAZ,SAAA,CAAAP,IAAA,MAAAoB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}