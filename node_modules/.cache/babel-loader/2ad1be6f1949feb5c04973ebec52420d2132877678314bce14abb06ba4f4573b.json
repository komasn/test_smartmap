{"ast":null,"code":"export const getCatalog = async () => {\n  const res = await fetch('./api/catalog.json');\n  const data = await res.json();\n  return data;\n};\nexport function* walkCategories(data) {\n  for (const x of data) {\n    if (x.type === \"Category\") {\n      yield* walkCategories(x.items);\n    } else {\n      yield x;\n    }\n  }\n}","map":{"version":3,"names":["getCatalog","res","fetch","data","json","walkCategories","x","type","items"],"sources":["/home/magari/git/test_smartmap/src/api/catalog.ts"],"sourcesContent":["export type CatalogFeature = {\n  catalog: CatalogDataItem\n  properties: Record<string, any>\n}\n\nexport type CatalogVectorDataItem = {\n  type: \"DataItem\"\n  id: string\n  name: string\n  class: string\n  metadata: Record<string, string>\n}\n\nexport type CatalogCustomSourceVectorDataItem = {\n  type: \"DataItem\"\n  id: string\n  name: string\n  customDataSource: string\n  customDataSourceLayer?: string\n  class?: string\n  metadata: Record<string, string>\n}\n\nexport type CatalogGeoJSONDataItem = {\n  type: \"DataItem\"\n  id: string\n  name: string\n  class: string\n  geojsonEndpoint: string\n  metadata: Record<string, string>\n}\n\nexport type CatalogLiveLocationDataItem = {\n  type: \"DataItem\"\n  id: string\n  name: string\n  class: string\n  liveLocationId: string\n  metadata: Record<string, string>\n}\n\nexport type CatalogDataItem = CatalogVectorDataItem | CatalogCustomSourceVectorDataItem | CatalogGeoJSONDataItem | CatalogLiveLocationDataItem;\n\nexport type CatalogCategory = {\n  type: \"Category\"\n  id: string\n  name: string\n  items: CatalogItem[]\n}\n\nexport type CatalogItem = CatalogDataItem | CatalogCategory\n\nexport const getCatalog: () => Promise<CatalogItem[]> = async () => {\n  const res = await fetch('./api/catalog.json');\n  const data: CatalogItem[] = await res.json();\n  return data;\n}\n\nexport function *walkCategories(data: CatalogItem[]): Generator<CatalogDataItem, void, unknown> {\n  for (const x of data) {\n    if (x.type === \"Category\") {\n      yield *walkCategories(x.items);\n    } else {\n      yield x;\n    }\n  }\n}\n"],"mappings":"AAoDA,OAAO,MAAMA,UAAwC,GAAG,MAAAA,CAAA,KAAY;EAClE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oBAAoB,CAAC;EAC7C,MAAMC,IAAmB,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;EAC5C,OAAOD,IAAI;AACb,CAAC;AAED,OAAO,UAAUE,cAAcA,CAACF,IAAmB,EAA6C;EAC9F,KAAK,MAAMG,CAAC,IAAIH,IAAI,EAAE;IACpB,IAAIG,CAAC,CAACC,IAAI,KAAK,UAAU,EAAE;MACzB,OAAOF,cAAc,CAACC,CAAC,CAACE,KAAK,CAAC;IAChC,CAAC,MAAM;MACL,MAAMF,CAAC;IACT;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}