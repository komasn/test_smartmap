{"ast":null,"code":"export const lineWidth_thin = [\"interpolate\", [\"linear\"], [\"zoom\"], 10, .5, 20, 3];\nexport const lineWidth_bold = [\"interpolate\", [\"linear\"], [\"zoom\"], 12, 1, 20, 5];\nexport const WEB_COLORS = Object.entries({\n  \"MediumVioletRed\": \"199 21 133\",\n  \"DeepPink\": \"255 20 147\",\n  \"PaleVioletRed\": \"219 112 147\",\n  \"HotPink\": \"255 105 180\",\n  \"DarkRed\": \"139 0 0\",\n  \"Red\": \"255 0 0\",\n  \"Firebrick\": \"178 34 34\",\n  \"Crimson\": \"220 20 60\",\n  \"IndianRed\": \"205 92 92\",\n  \"Salmon\": \"250 128 114\",\n  \"DarkSalmon\": \"233 150 122\",\n  \"OrangeRed\": \"255 69 0\",\n  \"Tomato\": \"255 99 71\",\n  \"DarkOrange\": \"255 140 0\",\n  \"Coral\": \"255 127 80\",\n  \"Orange\": \"255 165 0\",\n  \"DarkKhaki\": \"189 183 107\",\n  \"Gold\": \"255 215 0\",\n  \"Khaki\": \"240 230 140\",\n  \"PeachPuff\": \"255 218 185\",\n  \"Maroon\": \"128 0 0\",\n  \"Brown\": \"165 42 42\",\n  \"SaddleBrown\": \"139 69 19\",\n  \"Sienna\": \"160 82 45\",\n  \"Chocolate\": \"210 105 30\",\n  \"DarkGoldenrod\": \"184 134 11\",\n  \"Peru\": \"205 133 63\",\n  \"RosyBrown\": \"188 143 143\",\n  \"Goldenrod\": \"218 165 32\",\n  \"SandyBrown\": \"244 164 96\",\n  \"DarkGreen\": \"0 100 0\",\n  \"Green\": \"0 128 0\",\n  \"DarkOliveGreen\": \"85 107 47\",\n  \"ForestGreen\": \"34 139 34\",\n  \"SeaGreen\": \"46 139 87\",\n  \"Olive\": \"128 128 0\",\n  \"OliveDrab\": \"107 142 35\",\n  \"MediumSeaGreen\": \"60 179 113\",\n  \"LimeGreen\": \"50 205 50\",\n  \"Lime\": \"0 255 0\",\n  \"SpringGreen\": \"0 255 127\",\n  \"MediumSpringGreen\": \"0 250 154\",\n  \"DarkSeaGreen\": \"143 188 143\",\n  \"MediumAquamarine\": \"102 205 170\",\n  \"YellowGreen\": \"154 205 50\",\n  \"LawnGreen\": \"124 252 0\",\n  \"Chartreuse\": \"127 255 0\",\n  \"GreenYellow\": \"173 255 47\",\n  \"PaleGreen\": \"152 251 152\",\n  \"Teal\": \"0 128 128\",\n  \"DarkCyan\": \"0 139 139\",\n  \"CadetBlue\": \"95 158 160\",\n  \"DarkTurquoise\": \"0 206 209\",\n  \"MediumTurquoise\": \"72 209 204\",\n  \"Turquoise\": \"64 224 208\",\n  \"Aqua\": \"0 255 255\",\n  \"Cyan\": \"0 255 255\",\n  \"Aquamarine\": \"127 255 212\",\n  \"MidnightBlue\": \"25 25 112\",\n  \"Navy\": \"0 0 128\",\n  \"DarkBlue\": \"0 0 139\",\n  \"MediumBlue\": \"0 0 205\",\n  \"Blue\": \"0 0 255\",\n  \"RoyalBlue\": \"65 105 225\",\n  \"SteelBlue\": \"70 130 180\",\n  \"DodgerBlue\": \"30 144 255\",\n  \"DeepSkyBlue\": \"0 191 255\",\n  \"CornflowerBlue\": \"100 149 237\",\n  \"Indigo\": \"75 0 130\",\n  \"Purple\": \"128 0 128\",\n  \"DarkMagenta\": \"139 0 139\",\n  \"DarkViolet\": \"148 0 211\",\n  \"DarkSlateBlue\": \"72 61 139\",\n  \"BlueViolet\": \"138 43 226\",\n  \"DarkOrchid\": \"153 50 204\",\n  \"Fuchsia\": \"255 0 255\",\n  \"Magenta\": \"255 0 255\",\n  \"SlateBlue\": \"106 90 205\",\n  \"MediumSlateBlue\": \"123 104 238\",\n  \"MediumOrchid\": \"186 85 211\",\n  \"MediumPurple\": \"147 112 219\",\n  \"Orchid\": \"218 112 214\",\n  \"Violet\": \"238 130 238\",\n  \"Plum\": \"221 160 221\",\n  \"Black\": \"0 0 0\",\n  \"DarkSlateGray\": \"47 79 79\",\n  \"DimGray\": \"105 105 105\",\n  \"SlateGray\": \"112 128 144\",\n  \"Gray\": \"128 128 128\",\n  \"DarkGray\": \"169 169 169\"\n}).map(_c = ([key, value]) => {\n  const [r, g, b] = value.split(' ').map(val => parseInt(val, 10));\n  return `rgb(${r}, ${g}, ${b})`;\n});\n_c2 = WEB_COLORS;\nconst AREA_STYLES = {\n  \"第一種低層住居専用地域\": [{\n    id: \"/60_40\",\n    filter: [\"==\", \"subclass\", \"第一種低層住居専用地域(60_40)\"],\n    pattern: \"first_low_resident_60_40\",\n    outlineColor: \"rgb(156,84,160)\",\n    lineColor: \"rgb(36,190,159)\"\n  }, {\n    id: \"/80_50\",\n    filter: [\"==\", \"subclass\", \"第一種低層住居専用地域(80_50)\"],\n    pattern: \"first_low_resident_80_50\",\n    outlineColor: \"rgb(156,84,160)\",\n    lineColor: \"rgb(36,190,159)\"\n  }, {\n    id: \"/100_60\",\n    filter: [\"==\", \"subclass\", \"第一種低層住居専用地域(100_60)\"],\n    fillColor: \"rgb(36,190,159)\",\n    outlineColor: \"rgb(156,84,160)\",\n    lineColor: \"rgb(36,190,159)\"\n  }],\n  \"第二種低層住居専用地域\": [{\n    id: \"/100_60\",\n    filter: [\"==\", \"subclass\", \"第二種低層住居専用地域(100_60)\"],\n    outlineColor: \"rgb(156,84,160)\",\n    pattern: \"second_low_resident_100_60\"\n  }, {\n    id: \"/150_60\",\n    filter: [\"==\", \"subclass\", \"第二種低層住居専用地域(150_60)\"],\n    outlineColor: \"rgb(156,84,160)\",\n    fillColor: \"rgb(215,237,229)\"\n  }],\n  \"第一種中高層住居専用地域\": [{\n    id: \"\",\n    \"fillColor\": \"rgb(198,224,159)\",\n    \"outlineColor\": \"rgb(156,84,160)\"\n  }],\n  \"第二種中高層住居専用地域\": [{\n    id: \"\",\n    \"fillColor\": \"rgb(234,243,220)\",\n    \"outlineColor\": \"rgb(156,84,160)\"\n  }],\n  \"第一種住居地域\": [{\n    id: \"\",\n    \"fillColor\": \"rgb(255,246,152)\",\n    \"outlineColor\": \"rgb(156,84,160)\"\n  }],\n  \"第二種住居地域\": [{\n    id: \"\",\n    \"fillColor\": \"rgb(255,253,237)\",\n    \"outlineColor\": \"rgb(156,84,160)\"\n  }],\n  \"準住居地域\": [{\n    id: \"\",\n    \"fillColor\": \"rgb(251,194,144)\",\n    \"outlineColor\": \"rgb(156,84,160)\"\n  }],\n  \"近隣商業地域\": [{\n    id: \"/200_80\",\n    filter: [\"==\", \"subclass\", \"近隣商業地域(200_80)\"],\n    outlineColor: \"rgb(179,114,173)\",\n    pattern: \"near_commerce_200_80\"\n  }, {\n    id: \"/300_80\",\n    filter: [\"==\", \"subclass\", \"近隣商業地域(300_80)\"],\n    outlineColor: \"rgb(179,114,173)\",\n    fillColor: \"rgb(252,226,225)\"\n  }],\n  \"商業地域\": [{\n    id: \"/200_80\",\n    filter: [\"==\", \"subclass\", \"商業地域(200_80)\"],\n    pattern: \"commerce_200_80\",\n    outlineColor: \"rgb(179,114,173)\",\n    lineColor: \"rgb(241,93,125)\"\n  }, {\n    id: \"/300_80\",\n    filter: [\"==\", \"subclass\", \"商業地域(300_80)\"],\n    pattern: \"commerce_300_80\",\n    outlineColor: \"rgb(179,114,173)\",\n    lineColor: \"rgb(241,93,125)\"\n  }, {\n    id: \"/400_80\",\n    filter: [\"==\", \"subclass\", \"商業地域(400_80)\"],\n    fillColor: \"rgb(247,166,172)\",\n    outlineColor: \"rgb(179,114,173)\",\n    lineColor: \"rgb(241,93,125)\"\n  }, {\n    id: \"/500_80\",\n    filter: [\"==\", \"subclass\", \"商業地域(500_80)\"],\n    pattern: \"commerce_500_80\",\n    outlineColor: \"rgb(179,114,173)\",\n    lineColor: \"rgb(241,93,125)\"\n  }, {\n    id: \"/600_80\",\n    filter: [\"==\", \"subclass\", \"商業地域(600_80)\"],\n    pattern: \"commerce_600_80\",\n    outlineColor: \"rgb(179,114,173)\",\n    lineColor: \"rgb(241,93,125)\"\n  }, {\n    id: \"/700_80\",\n    filter: [\"==\", \"subclass\", \"商業地域(700_80)\"],\n    pattern: \"commerce_700_80\",\n    outlineColor: \"rgb(179,114,173)\",\n    lineColor: \"rgb(241,93,125)\"\n  }, {\n    id: \"/800_80\",\n    filter: [\"==\", \"subclass\", \"商業地域(800_80)\"],\n    pattern: \"commerce_800_80\",\n    outlineColor: \"rgb(179,114,173)\",\n    lineColor: \"rgb(241,93,125)\"\n  }],\n  \"準工業地域\": [{\n    id: \"\",\n    \"fillColor\": \"rgb(220,201,225)\",\n    \"outlineColor\": \"rgb(179,114,173)\"\n  }],\n  \"工業地域\": [{\n    id: \"\",\n    \"fillColor\": \"rgb(217,235,248)\",\n    \"outlineColor\": \"rgb(179,114,173)\"\n  }],\n  \"工業専用地域\": [{\n    id: \"\",\n    \"fillColor\": \"rgb(145,201,237)\",\n    \"outlineColor\": \"rgb(179,114,173)\"\n  }],\n  \"都市計画情報/都市計画基本図\": [{\n    id: \"\",\n    lineColor: \"rgb(100,100,100)\",\n    lineWidth: 1,\n    pointLabel: \"{TextString}\"\n  }]\n};\nexport const getCustomStyle = def => {\n  return AREA_STYLES[def.class || def.id];\n};\nexport const customStyleToPolygonTemplate = (style, color) => {\n  const fillPaint = style.pattern ? {\n    'fill-pattern': style.pattern\n  } : {\n    'fill-color': style.fillColor || color\n  };\n  return [{\n    \"id\": `${style.id}`,\n    source: \"takamatsu\",\n    \"source-layer\": \"main\",\n    type: \"fill\",\n    filter: style.filter,\n    paint: {\n      \"fill-opacity\": 0.8,\n      ...fillPaint\n    }\n  }, {\n    \"id\": `${style.id}/outline`,\n    source: \"takamatsu\",\n    \"source-layer\": \"main\",\n    type: \"line\",\n    filter: style.filter,\n    paint: {\n      \"line-color\": style.outlineColor || color,\n      \"line-width\": lineWidth_thin\n    }\n  }];\n};\nexport const customStyleToLineStringTemplate = (style, color) => [{\n  \"id\": `${style.id}`,\n  source: \"takamatsu\",\n  \"source-layer\": \"main\",\n  type: \"line\",\n  filter: style.filter,\n  paint: {\n    \"line-color\": style.lineColor || color,\n    \"line-width\": style.lineWidth || lineWidth_bold\n  }\n}];\nexport const customStyleToPointTemplate = (style, color) => {\n  let out = [];\n  if (style.pointLabel) {\n    out.push({\n      \"id\": `${style.id}/label`,\n      source: \"takamatsu\",\n      \"source-layer\": \"main\",\n      type: \"symbol\",\n      filter: style.filter,\n      layout: {\n        'text-field': style.pointLabel,\n        'text-size': 12,\n        'text-offset': [0, -0.7],\n        'text-anchor': 'top',\n        'text-font': [\"Noto Sans Regular\"]\n      },\n      paint: {\n        'text-color': 'black',\n        'text-halo-color': 'white',\n        'text-halo-width': 1\n      }\n    });\n  } else {\n    out.push({\n      \"id\": `${style.id}`,\n      source: \"takamatsu\",\n      \"source-layer\": \"main\",\n      type: \"circle\",\n      filter: style.filter,\n      paint: {\n        'circle-radius': 7,\n        'circle-color': style.pointColor || color,\n        'circle-opacity': .8,\n        'circle-stroke-width': 1,\n        'circle-stroke-color': 'gray',\n        'circle-stroke-opacity': 1\n      }\n    });\n  }\n  return out;\n};\nexport const DEFAULT_POLYGON_STYLE = color => [{\n  id: \"\",\n  source: \"takamatsu\",\n  \"source-layer\": \"main\",\n  type: \"fill\",\n  paint: {\n    \"fill-color\": color,\n    \"fill-opacity\": 0.7\n  }\n}, {\n  id: \"/outline\",\n  source: \"takamatsu\",\n  \"source-layer\": \"main\",\n  type: \"line\",\n  paint: {\n    \"line-color\": color,\n    \"line-width\": lineWidth_thin\n  }\n}];\n_c3 = DEFAULT_POLYGON_STYLE;\nexport const DEFAULT_LINESTRING_STYLE = color => [{\n  id: \"\",\n  source: \"takamatsu\",\n  \"source-layer\": \"main\",\n  type: \"line\",\n  paint: {\n    \"line-color\": color,\n    \"line-width\": lineWidth_bold\n  }\n}];\n_c4 = DEFAULT_LINESTRING_STYLE;\nexport const DEFAULT_POINT_STYLE = color => [{\n  id: \"\",\n  source: \"takamatsu\",\n  \"source-layer\": \"main\",\n  type: \"circle\",\n  paint: {\n    'circle-radius': 7,\n    'circle-color': color,\n    'circle-opacity': .8,\n    'circle-stroke-width': 1,\n    'circle-stroke-color': 'gray',\n    'circle-stroke-opacity': 1\n  }\n}];\n_c5 = DEFAULT_POINT_STYLE;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"WEB_COLORS$Object.entries({\\n  \\\"MediumVioletRed\\\": \\\"199 21 133\\\",\\n  \\\"DeepPink\\\": \\\"255 20 147\\\",\\n  \\\"PaleVioletRed\\\": \\\"219 112 147\\\",\\n  \\\"HotPink\\\": \\\"255 105 180\\\",\\n  \\\"DarkRed\\\": \\\"139 0 0\\\",\\n  \\\"Red\\\": \\\"255 0 0\\\",\\n  \\\"Firebrick\\\": \\\"178 34 34\\\",\\n  \\\"Crimson\\\": \\\"220 20 60\\\",\\n  \\\"IndianRed\\\": \\\"205 92 92\\\",\\n  \\\"Salmon\\\": \\\"250 128 114\\\",\\n  \\\"DarkSalmon\\\": \\\"233 150 122\\\",\\n  \\\"OrangeRed\\\": \\\"255 69 0\\\",\\n  \\\"Tomato\\\": \\\"255 99 71\\\",\\n  \\\"DarkOrange\\\": \\\"255 140 0\\\",\\n  \\\"Coral\\\": \\\"255 127 80\\\",\\n  \\\"Orange\\\": \\\"255 165 0\\\",\\n  \\\"DarkKhaki\\\": \\\"189 183 107\\\",\\n  \\\"Gold\\\": \\\"255 215 0\\\",\\n  \\\"Khaki\\\": \\\"240 230 140\\\",\\n  \\\"PeachPuff\\\": \\\"255 218 185\\\",\\n  \\\"Maroon\\\": \\\"128 0 0\\\",\\n  \\\"Brown\\\": \\\"165 42 42\\\",\\n  \\\"SaddleBrown\\\": \\\"139 69 19\\\",\\n  \\\"Sienna\\\": \\\"160 82 45\\\",\\n  \\\"Chocolate\\\": \\\"210 105 30\\\",\\n  \\\"DarkGoldenrod\\\": \\\"184 134 11\\\",\\n  \\\"Peru\\\": \\\"205 133 63\\\",\\n  \\\"RosyBrown\\\": \\\"188 143 143\\\",\\n  \\\"Goldenrod\\\": \\\"218 165 32\\\",\\n  \\\"SandyBrown\\\": \\\"244 164 96\\\",\\n  \\\"DarkGreen\\\": \\\"0 100 0\\\",\\n  \\\"Green\\\": \\\"0 128 0\\\",\\n  \\\"DarkOliveGreen\\\": \\\"85 107 47\\\",\\n  \\\"ForestGreen\\\": \\\"34 139 34\\\",\\n  \\\"SeaGreen\\\": \\\"46 139 87\\\",\\n  \\\"Olive\\\": \\\"128 128 0\\\",\\n  \\\"OliveDrab\\\": \\\"107 142 35\\\",\\n  \\\"MediumSeaGreen\\\": \\\"60 179 113\\\",\\n  \\\"LimeGreen\\\": \\\"50 205 50\\\",\\n  \\\"Lime\\\": \\\"0 255 0\\\",\\n  \\\"SpringGreen\\\": \\\"0 255 127\\\",\\n  \\\"MediumSpringGreen\\\": \\\"0 250 154\\\",\\n  \\\"DarkSeaGreen\\\": \\\"143 188 143\\\",\\n  \\\"MediumAquamarine\\\": \\\"102 205 170\\\",\\n  \\\"YellowGreen\\\": \\\"154 205 50\\\",\\n  \\\"LawnGreen\\\": \\\"124 252 0\\\",\\n  \\\"Chartreuse\\\": \\\"127 255 0\\\",\\n  \\\"GreenYellow\\\": \\\"173 255 47\\\",\\n  \\\"PaleGreen\\\": \\\"152 251 152\\\",\\n  \\\"Teal\\\": \\\"0 128 128\\\",\\n  \\\"DarkCyan\\\": \\\"0 139 139\\\",\\n  \\\"CadetBlue\\\": \\\"95 158 160\\\",\\n  \\\"DarkTurquoise\\\": \\\"0 206 209\\\",\\n  \\\"MediumTurquoise\\\": \\\"72 209 204\\\",\\n  \\\"Turquoise\\\": \\\"64 224 208\\\",\\n  \\\"Aqua\\\": \\\"0 255 255\\\",\\n  \\\"Cyan\\\": \\\"0 255 255\\\",\\n  \\\"Aquamarine\\\": \\\"127 255 212\\\",\\n  \\\"MidnightBlue\\\": \\\"25 25 112\\\",\\n  \\\"Navy\\\": \\\"0 0 128\\\",\\n  \\\"DarkBlue\\\": \\\"0 0 139\\\",\\n  \\\"MediumBlue\\\": \\\"0 0 205\\\",\\n  \\\"Blue\\\": \\\"0 0 255\\\",\\n  \\\"RoyalBlue\\\": \\\"65 105 225\\\",\\n  \\\"SteelBlue\\\": \\\"70 130 180\\\",\\n  \\\"DodgerBlue\\\": \\\"30 144 255\\\",\\n  \\\"DeepSkyBlue\\\": \\\"0 191 255\\\",\\n  \\\"CornflowerBlue\\\": \\\"100 149 237\\\",\\n  \\\"Indigo\\\": \\\"75 0 130\\\",\\n  \\\"Purple\\\": \\\"128 0 128\\\",\\n  \\\"DarkMagenta\\\": \\\"139 0 139\\\",\\n  \\\"DarkViolet\\\": \\\"148 0 211\\\",\\n  \\\"DarkSlateBlue\\\": \\\"72 61 139\\\",\\n  \\\"BlueViolet\\\": \\\"138 43 226\\\",\\n  \\\"DarkOrchid\\\": \\\"153 50 204\\\",\\n  \\\"Fuchsia\\\": \\\"255 0 255\\\",\\n  \\\"Magenta\\\": \\\"255 0 255\\\",\\n  \\\"SlateBlue\\\": \\\"106 90 205\\\",\\n  \\\"MediumSlateBlue\\\": \\\"123 104 238\\\",\\n  \\\"MediumOrchid\\\": \\\"186 85 211\\\",\\n  \\\"MediumPurple\\\": \\\"147 112 219\\\",\\n  \\\"Orchid\\\": \\\"218 112 214\\\",\\n  \\\"Violet\\\": \\\"238 130 238\\\",\\n  \\\"Plum\\\": \\\"221 160 221\\\",\\n  \\\"Black\\\": \\\"0 0 0\\\",\\n  \\\"DarkSlateGray\\\": \\\"47 79 79\\\",\\n  \\\"DimGray\\\": \\\"105 105 105\\\",\\n  \\\"SlateGray\\\": \\\"112 128 144\\\",\\n  \\\"Gray\\\": \\\"128 128 128\\\",\\n  \\\"DarkGray\\\": \\\"169 169 169\\\",\\n}).map\");\n$RefreshReg$(_c2, \"WEB_COLORS\");\n$RefreshReg$(_c3, \"DEFAULT_POLYGON_STYLE\");\n$RefreshReg$(_c4, \"DEFAULT_LINESTRING_STYLE\");\n$RefreshReg$(_c5, \"DEFAULT_POINT_STYLE\");","map":{"version":3,"names":["lineWidth_thin","lineWidth_bold","WEB_COLORS","Object","entries","map","_c","key","value","r","g","b","split","val","parseInt","_c2","AREA_STYLES","id","filter","pattern","outlineColor","lineColor","fillColor","lineWidth","pointLabel","getCustomStyle","def","class","customStyleToPolygonTemplate","style","color","fillPaint","source","type","paint","customStyleToLineStringTemplate","customStyleToPointTemplate","out","push","layout","pointColor","DEFAULT_POLYGON_STYLE","_c3","DEFAULT_LINESTRING_STYLE","_c4","DEFAULT_POINT_STYLE","_c5","$RefreshReg$"],"sources":["/home/magari/git/test_smartmap/src/utils/mapStyling.ts"],"sourcesContent":["import type { DataDrivenPropertyValueSpecification } from \"maplibre-gl\";\nimport { CatalogDataItem } from \"../api/catalog\";\n\nexport const lineWidth_thin: DataDrivenPropertyValueSpecification<number> = [\n  \"interpolate\",\n  [\"linear\"],\n  [\"zoom\"],\n  10, .5,\n  20, 3,\n];\n\nexport const lineWidth_bold: DataDrivenPropertyValueSpecification<number> = [\n  \"interpolate\",\n  [\"linear\"],\n  [\"zoom\"],\n  12, 1,\n  20, 5,\n];\n\nexport const WEB_COLORS = Object.entries({\n  \"MediumVioletRed\": \"199 21 133\",\n  \"DeepPink\": \"255 20 147\",\n  \"PaleVioletRed\": \"219 112 147\",\n  \"HotPink\": \"255 105 180\",\n  \"DarkRed\": \"139 0 0\",\n  \"Red\": \"255 0 0\",\n  \"Firebrick\": \"178 34 34\",\n  \"Crimson\": \"220 20 60\",\n  \"IndianRed\": \"205 92 92\",\n  \"Salmon\": \"250 128 114\",\n  \"DarkSalmon\": \"233 150 122\",\n  \"OrangeRed\": \"255 69 0\",\n  \"Tomato\": \"255 99 71\",\n  \"DarkOrange\": \"255 140 0\",\n  \"Coral\": \"255 127 80\",\n  \"Orange\": \"255 165 0\",\n  \"DarkKhaki\": \"189 183 107\",\n  \"Gold\": \"255 215 0\",\n  \"Khaki\": \"240 230 140\",\n  \"PeachPuff\": \"255 218 185\",\n  \"Maroon\": \"128 0 0\",\n  \"Brown\": \"165 42 42\",\n  \"SaddleBrown\": \"139 69 19\",\n  \"Sienna\": \"160 82 45\",\n  \"Chocolate\": \"210 105 30\",\n  \"DarkGoldenrod\": \"184 134 11\",\n  \"Peru\": \"205 133 63\",\n  \"RosyBrown\": \"188 143 143\",\n  \"Goldenrod\": \"218 165 32\",\n  \"SandyBrown\": \"244 164 96\",\n  \"DarkGreen\": \"0 100 0\",\n  \"Green\": \"0 128 0\",\n  \"DarkOliveGreen\": \"85 107 47\",\n  \"ForestGreen\": \"34 139 34\",\n  \"SeaGreen\": \"46 139 87\",\n  \"Olive\": \"128 128 0\",\n  \"OliveDrab\": \"107 142 35\",\n  \"MediumSeaGreen\": \"60 179 113\",\n  \"LimeGreen\": \"50 205 50\",\n  \"Lime\": \"0 255 0\",\n  \"SpringGreen\": \"0 255 127\",\n  \"MediumSpringGreen\": \"0 250 154\",\n  \"DarkSeaGreen\": \"143 188 143\",\n  \"MediumAquamarine\": \"102 205 170\",\n  \"YellowGreen\": \"154 205 50\",\n  \"LawnGreen\": \"124 252 0\",\n  \"Chartreuse\": \"127 255 0\",\n  \"GreenYellow\": \"173 255 47\",\n  \"PaleGreen\": \"152 251 152\",\n  \"Teal\": \"0 128 128\",\n  \"DarkCyan\": \"0 139 139\",\n  \"CadetBlue\": \"95 158 160\",\n  \"DarkTurquoise\": \"0 206 209\",\n  \"MediumTurquoise\": \"72 209 204\",\n  \"Turquoise\": \"64 224 208\",\n  \"Aqua\": \"0 255 255\",\n  \"Cyan\": \"0 255 255\",\n  \"Aquamarine\": \"127 255 212\",\n  \"MidnightBlue\": \"25 25 112\",\n  \"Navy\": \"0 0 128\",\n  \"DarkBlue\": \"0 0 139\",\n  \"MediumBlue\": \"0 0 205\",\n  \"Blue\": \"0 0 255\",\n  \"RoyalBlue\": \"65 105 225\",\n  \"SteelBlue\": \"70 130 180\",\n  \"DodgerBlue\": \"30 144 255\",\n  \"DeepSkyBlue\": \"0 191 255\",\n  \"CornflowerBlue\": \"100 149 237\",\n  \"Indigo\": \"75 0 130\",\n  \"Purple\": \"128 0 128\",\n  \"DarkMagenta\": \"139 0 139\",\n  \"DarkViolet\": \"148 0 211\",\n  \"DarkSlateBlue\": \"72 61 139\",\n  \"BlueViolet\": \"138 43 226\",\n  \"DarkOrchid\": \"153 50 204\",\n  \"Fuchsia\": \"255 0 255\",\n  \"Magenta\": \"255 0 255\",\n  \"SlateBlue\": \"106 90 205\",\n  \"MediumSlateBlue\": \"123 104 238\",\n  \"MediumOrchid\": \"186 85 211\",\n  \"MediumPurple\": \"147 112 219\",\n  \"Orchid\": \"218 112 214\",\n  \"Violet\": \"238 130 238\",\n  \"Plum\": \"221 160 221\",\n  \"Black\": \"0 0 0\",\n  \"DarkSlateGray\": \"47 79 79\",\n  \"DimGray\": \"105 105 105\",\n  \"SlateGray\": \"112 128 144\",\n  \"Gray\": \"128 128 128\",\n  \"DarkGray\": \"169 169 169\",\n}).map(([key, value]) => {\n  const [r, g, b] = value.split(' ').map(val => parseInt(val, 10));\n  return `rgb(${r}, ${g}, ${b})`;\n});\n\nexport type CustomStyle = {\n  id: string\n  filter?: any\n  pattern?: string\n  outlineColor?: string\n  fillColor?: string\n  lineColor?: string\n  pointColor?: string\n  pointLabel?: string\n  lineWidth?: any\n}\n\nconst AREA_STYLES: { [key: string]: CustomStyle[] } = {\n  \"第一種低層住居専用地域\": [\n    {\n      id: \"/60_40\",\n      filter: [\"==\", \"subclass\", \"第一種低層住居専用地域(60_40)\"],\n      pattern: \"first_low_resident_60_40\",\n      outlineColor: \"rgb(156,84,160)\",\n      lineColor: \"rgb(36,190,159)\",\n    },\n    {\n      id: \"/80_50\",\n      filter: [\"==\", \"subclass\", \"第一種低層住居専用地域(80_50)\"],\n      pattern: \"first_low_resident_80_50\",\n      outlineColor: \"rgb(156,84,160)\",\n      lineColor: \"rgb(36,190,159)\",\n    },\n    {\n      id: \"/100_60\",\n      filter: [\"==\", \"subclass\", \"第一種低層住居専用地域(100_60)\"],\n      fillColor: \"rgb(36,190,159)\",\n      outlineColor: \"rgb(156,84,160)\",\n      lineColor: \"rgb(36,190,159)\",\n    },\n  ],\n  \"第二種低層住居専用地域\": [\n    {\n      id: \"/100_60\",\n      filter: [\"==\", \"subclass\", \"第二種低層住居専用地域(100_60)\"],\n      outlineColor: \"rgb(156,84,160)\",\n      pattern: \"second_low_resident_100_60\",\n    },\n    {\n      id: \"/150_60\",\n      filter: [\"==\", \"subclass\", \"第二種低層住居専用地域(150_60)\"],\n      outlineColor: \"rgb(156,84,160)\",\n      fillColor: \"rgb(215,237,229)\",\n    }\n  ],\n  \"第一種中高層住居専用地域\": [\n    {\n      id: \"\",\n      \"fillColor\": \"rgb(198,224,159)\",\n      \"outlineColor\": \"rgb(156,84,160)\",\n    }\n  ],\n  \"第二種中高層住居専用地域\": [\n    {\n      id: \"\",\n      \"fillColor\": \"rgb(234,243,220)\",\n      \"outlineColor\": \"rgb(156,84,160)\"\n    }\n  ],\n  \"第一種住居地域\": [\n    {\n      id: \"\",\n      \"fillColor\": \"rgb(255,246,152)\",\n      \"outlineColor\": \"rgb(156,84,160)\"\n    }\n  ],\n  \"第二種住居地域\": [\n    {\n      id: \"\",\n      \"fillColor\": \"rgb(255,253,237)\",\n      \"outlineColor\": \"rgb(156,84,160)\"\n    },\n  ],\n  \"準住居地域\": [\n    {\n      id: \"\",\n      \"fillColor\": \"rgb(251,194,144)\",\n      \"outlineColor\": \"rgb(156,84,160)\"\n    }\n  ],\n  \"近隣商業地域\": [\n    {\n      id: \"/200_80\",\n      filter: [\"==\", \"subclass\", \"近隣商業地域(200_80)\"],\n      outlineColor: \"rgb(179,114,173)\",\n      pattern: \"near_commerce_200_80\",\n    },\n    {\n      id: \"/300_80\",\n      filter: [\"==\", \"subclass\", \"近隣商業地域(300_80)\"],\n      outlineColor: \"rgb(179,114,173)\",\n      fillColor: \"rgb(252,226,225)\",\n    }\n  ],\n  \"商業地域\": [\n    {\n      id: \"/200_80\",\n      filter: [\"==\", \"subclass\", \"商業地域(200_80)\"],\n      pattern: \"commerce_200_80\",\n      outlineColor: \"rgb(179,114,173)\",\n      lineColor: \"rgb(241,93,125)\",\n    },\n    {\n      id: \"/300_80\",\n      filter: [\"==\", \"subclass\", \"商業地域(300_80)\"],\n      pattern: \"commerce_300_80\",\n      outlineColor: \"rgb(179,114,173)\",\n      lineColor: \"rgb(241,93,125)\",\n    },\n    {\n      id: \"/400_80\",\n      filter: [\"==\", \"subclass\", \"商業地域(400_80)\"],\n      fillColor: \"rgb(247,166,172)\",\n      outlineColor: \"rgb(179,114,173)\",\n      lineColor: \"rgb(241,93,125)\",\n    },\n    {\n      id: \"/500_80\",\n      filter: [\"==\", \"subclass\", \"商業地域(500_80)\"],\n      pattern: \"commerce_500_80\",\n      outlineColor: \"rgb(179,114,173)\",\n      lineColor: \"rgb(241,93,125)\",\n    },\n    {\n      id: \"/600_80\",\n      filter: [\"==\", \"subclass\", \"商業地域(600_80)\"],\n      pattern: \"commerce_600_80\",\n      outlineColor: \"rgb(179,114,173)\",\n      lineColor: \"rgb(241,93,125)\",\n    },\n    {\n      id: \"/700_80\",\n      filter: [\"==\", \"subclass\", \"商業地域(700_80)\"],\n      pattern: \"commerce_700_80\",\n      outlineColor: \"rgb(179,114,173)\",\n      lineColor: \"rgb(241,93,125)\",\n    },\n    {\n      id: \"/800_80\",\n      filter: [\"==\", \"subclass\", \"商業地域(800_80)\"],\n      pattern: \"commerce_800_80\",\n      outlineColor: \"rgb(179,114,173)\",\n      lineColor: \"rgb(241,93,125)\",\n    },\n  ],\n  \"準工業地域\": [\n    {\n      id: \"\",\n      \"fillColor\": \"rgb(220,201,225)\",\n      \"outlineColor\": \"rgb(179,114,173)\"\n    }\n  ],\n  \"工業地域\": [\n    {\n      id: \"\",\n      \"fillColor\": \"rgb(217,235,248)\",\n      \"outlineColor\": \"rgb(179,114,173)\"\n    }\n  ],\n  \"工業専用地域\": [\n    {\n      id: \"\",\n      \"fillColor\": \"rgb(145,201,237)\",\n      \"outlineColor\": \"rgb(179,114,173)\"\n    }\n  ],\n  \"都市計画情報/都市計画基本図\": [\n    {\n      id: \"\",\n      lineColor: \"rgb(100,100,100)\",\n      lineWidth: 1,\n      pointLabel: \"{TextString}\"\n    }\n  ]\n};\n\nexport const getCustomStyle: (layerDefinition: CatalogDataItem) => CustomStyle[] | undefined = (def) => {\n  return AREA_STYLES[def.class || def.id];\n};\n\nexport type LayerSpecification = (\n  maplibregl.FillLayerSpecification |\n  maplibregl.LineLayerSpecification |\n  maplibregl.SymbolLayerSpecification |\n  maplibregl.CircleLayerSpecification\n)\n\nexport type LayerTemplate = (LayerSpecification & {\n  source?: string | maplibregl.SourceSpecification | undefined;\n});\n\nexport const customStyleToPolygonTemplate: (customStyle: CustomStyle, defaultColor: string) => LayerTemplate[] = (style, color) => {\n  const fillPaint = style.pattern ? { 'fill-pattern': style.pattern } : { 'fill-color': style.fillColor || color };\n  return [\n    {\n      \"id\": `${style.id}`,\n      source: \"takamatsu\",\n      \"source-layer\": \"main\",\n      type: \"fill\",\n      filter: style.filter,\n      paint: {\n        \"fill-opacity\": 0.8,\n        ...fillPaint,\n      },\n    },\n    {\n      \"id\": `${style.id}/outline`,\n      source: \"takamatsu\",\n      \"source-layer\": \"main\",\n      type: \"line\",\n      filter: style.filter,\n      paint: {\n        \"line-color\": style.outlineColor || color,\n        \"line-width\": lineWidth_thin,\n      },\n    }\n  ];\n}\n\nexport const customStyleToLineStringTemplate: (customStyle: CustomStyle, defaultColor: string) => LayerTemplate[] = (style, color) => [\n  {\n    \"id\": `${style.id}`,\n    source: \"takamatsu\",\n    \"source-layer\": \"main\",\n    type: \"line\",\n    filter: style.filter,\n    paint: {\n      \"line-color\": style.lineColor || color,\n      \"line-width\": style.lineWidth || lineWidth_bold,\n    },\n  },\n];\n\nexport const customStyleToPointTemplate: (customStyle: CustomStyle, defaultColor: string) => LayerTemplate[] = (style, color) => {\n  let out: LayerTemplate[] = [];\n  if (style.pointLabel) {\n    out.push({\n      \"id\": `${style.id}/label`,\n      source: \"takamatsu\",\n      \"source-layer\": \"main\",\n      type: \"symbol\",\n      filter: style.filter,\n      layout: {\n        'text-field': style.pointLabel,\n        'text-size': 12,\n        'text-offset': [0, -0.7],\n        'text-anchor': 'top',\n        'text-font': [\"Noto Sans Regular\"],\n      },\n      paint: {\n        'text-color': 'black',\n        'text-halo-color': 'white',\n        'text-halo-width': 1,\n      },\n    });\n  } else {\n    out.push({\n      \"id\": `${style.id}`,\n      source: \"takamatsu\",\n      \"source-layer\": \"main\",\n      type: \"circle\",\n      filter: style.filter,\n      paint: {\n        'circle-radius': 7,\n        'circle-color': style.pointColor || color,\n        'circle-opacity': .8,\n        'circle-stroke-width': 1,\n        'circle-stroke-color': 'gray',\n        'circle-stroke-opacity': 1,\n      }\n    });\n  }\n  return out;\n};\n\nexport const DEFAULT_POLYGON_STYLE: (color: string) => LayerTemplate[] = (color) => [\n  {\n    id: \"\",\n    source: \"takamatsu\",\n    \"source-layer\": \"main\",\n    type: \"fill\",\n    paint: {\n      \"fill-color\": color,\n      \"fill-opacity\": 0.7,\n    },\n  },\n  {\n    id: \"/outline\",\n    source: \"takamatsu\",\n    \"source-layer\": \"main\",\n    type: \"line\",\n    paint: {\n      \"line-color\": color,\n      \"line-width\": lineWidth_thin,\n    },\n  },\n];\n\nexport const DEFAULT_LINESTRING_STYLE: (color: string) => LayerTemplate[] = (color) => [{\n  id: \"\",\n  source: \"takamatsu\",\n  \"source-layer\": \"main\",\n  type: \"line\",\n  paint: {\n    \"line-color\": color,\n    \"line-width\": lineWidth_bold,\n  },\n}];\n\nexport const DEFAULT_POINT_STYLE: (color: string) => LayerTemplate[] = (color) => [{\n  id: \"\",\n  source: \"takamatsu\",\n  \"source-layer\": \"main\",\n  type: \"circle\",\n  paint: {\n    'circle-radius': 7,\n    'circle-color': color,\n    'circle-opacity': .8,\n    'circle-stroke-width': 1,\n    'circle-stroke-color': 'gray',\n    'circle-stroke-opacity': 1,\n  }\n}];\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}