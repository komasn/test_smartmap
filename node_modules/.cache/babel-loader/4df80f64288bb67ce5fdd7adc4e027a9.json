{"ast":null,"code":"import _objectSpread from\"/home/magari/git/test_smartmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/magari/git/test_smartmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _createForOfIteratorHelper from\"/home/magari/git/test_smartmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _toConsumableArray from\"/home/magari/git/test_smartmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/magari/git/test_smartmap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function _regeneratorRuntime(){\"use strict\";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */_regeneratorRuntime=function _regeneratorRuntime(){return e;};var t,e={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(t,e,r){t[e]=r.value;},i=\"function\"==typeof Symbol?Symbol:{},a=i.iterator||\"@@iterator\",c=i.asyncIterator||\"@@asyncIterator\",u=i.toStringTag||\"@@toStringTag\";function define(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e];}try{define({},\"\");}catch(t){define=function define(t,e,r){return t[e]=r;};}function wrap(t,e,r,n){var i=e&&e.prototype instanceof Generator?e:Generator,a=Object.create(i.prototype),c=new Context(n||[]);return o(a,\"_invoke\",{value:makeInvokeMethod(t,r,c)}),a;}function tryCatch(t,e,r){try{return{type:\"normal\",arg:t.call(e,r)};}catch(t){return{type:\"throw\",arg:t};}}e.wrap=wrap;var h=\"suspendedStart\",l=\"suspendedYield\",f=\"executing\",s=\"completed\",y={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var p={};define(p,a,function(){return this;});var d=Object.getPrototypeOf,v=d&&d(d(values([])));v&&v!==r&&n.call(v,a)&&(p=v);var g=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(p);function defineIteratorMethods(t){[\"next\",\"throw\",\"return\"].forEach(function(e){define(t,e,function(t){return this._invoke(e,t);});});}function AsyncIterator(t,e){function invoke(r,o,i,a){var c=tryCatch(t[r],t,o);if(\"throw\"!==c.type){var u=c.arg,h=u.value;return h&&\"object\"==typeof h&&n.call(h,\"__await\")?e.resolve(h.__await).then(function(t){invoke(\"next\",t,i,a);},function(t){invoke(\"throw\",t,i,a);}):e.resolve(h).then(function(t){u.value=t,i(u);},function(t){return invoke(\"throw\",t,i,a);});}a(c.arg);}var r;o(this,\"_invoke\",{value:function value(t,n){function callInvokeWithMethodAndArg(){return new e(function(e,r){invoke(t,n,e,r);});}return r=r?r.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg();}});}function makeInvokeMethod(e,r,n){var o=h;return function(i,a){if(o===f)throw new Error(\"Generator is already running\");if(o===s){if(\"throw\"===i)throw a;return{value:t,done:!0};}for(n.method=i,n.arg=a;;){var c=n.delegate;if(c){var u=maybeInvokeDelegate(c,n);if(u){if(u===y)continue;return u;}}if(\"next\"===n.method)n.sent=n._sent=n.arg;else if(\"throw\"===n.method){if(o===h)throw o=s,n.arg;n.dispatchException(n.arg);}else\"return\"===n.method&&n.abrupt(\"return\",n.arg);o=f;var p=tryCatch(e,r,n);if(\"normal\"===p.type){if(o=n.done?s:l,p.arg===y)continue;return{value:p.arg,done:n.done};}\"throw\"===p.type&&(o=s,n.method=\"throw\",n.arg=p.arg);}};}function maybeInvokeDelegate(e,r){var n=r.method,o=e.iterator[n];if(o===t)return r.delegate=null,\"throw\"===n&&e.iterator.return&&(r.method=\"return\",r.arg=t,maybeInvokeDelegate(e,r),\"throw\"===r.method)||\"return\"!==n&&(r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a '\"+n+\"' method\")),y;var i=tryCatch(o,e.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,y;var a=i.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=t),r.delegate=null,y):a:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,y);}function pushTryEntry(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e);}function resetTryEntry(t){var e=t.completion||{};e.type=\"normal\",delete e.arg,t.completion=e;}function Context(t){this.tryEntries=[{tryLoc:\"root\"}],t.forEach(pushTryEntry,this),this.reset(!0);}function values(e){if(e||\"\"===e){var r=e[a];if(r)return r.call(e);if(\"function\"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function next(){for(;++o<e.length;)if(n.call(e,o))return next.value=e[o],next.done=!1,next;return next.value=t,next.done=!0,next;};return i.next=i;}}throw new TypeError(typeof e+\" is not iterable\");}return GeneratorFunction.prototype=GeneratorFunctionPrototype,o(g,\"constructor\",{value:GeneratorFunctionPrototype,configurable:!0}),o(GeneratorFunctionPrototype,\"constructor\",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,u,\"GeneratorFunction\"),e.isGeneratorFunction=function(t){var e=\"function\"==typeof t&&t.constructor;return!!e&&(e===GeneratorFunction||\"GeneratorFunction\"===(e.displayName||e.name));},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,GeneratorFunctionPrototype):(t.__proto__=GeneratorFunctionPrototype,define(t,u,\"GeneratorFunction\")),t.prototype=Object.create(g),t;},e.awrap=function(t){return{__await:t};},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,c,function(){return this;}),e.AsyncIterator=AsyncIterator,e.async=function(t,r,n,o,i){void 0===i&&(i=Promise);var a=new AsyncIterator(wrap(t,r,n,o),i);return e.isGeneratorFunction(r)?a:a.next().then(function(t){return t.done?t.value:a.next();});},defineIteratorMethods(g),define(g,u,\"Generator\"),define(g,a,function(){return this;}),define(g,\"toString\",function(){return\"[object Generator]\";}),e.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function next(){for(;r.length;){var t=r.pop();if(t in e)return next.value=t,next.done=!1,next;}return next.done=!0,next;};},e.values=values,Context.prototype={constructor:Context,reset:function reset(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=t,this.tryEntries.forEach(resetTryEntry),!e)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t);},stop:function stop(){this.done=!0;var t=this.tryEntries[0].completion;if(\"throw\"===t.type)throw t.arg;return this.rval;},dispatchException:function dispatchException(e){if(this.done)throw e;var r=this;function handle(n,o){return a.type=\"throw\",a.arg=e,r.next=n,o&&(r.method=\"next\",r.arg=t),!!o;}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if(\"root\"===i.tryLoc)return handle(\"end\");if(i.tryLoc<=this.prev){var c=n.call(i,\"catchLoc\"),u=n.call(i,\"finallyLoc\");if(c&&u){if(this.prev<i.catchLoc)return handle(i.catchLoc,!0);if(this.prev<i.finallyLoc)return handle(i.finallyLoc);}else if(c){if(this.prev<i.catchLoc)return handle(i.catchLoc,!0);}else{if(!u)throw new Error(\"try statement without catch or finally\");if(this.prev<i.finallyLoc)return handle(i.finallyLoc);}}}},abrupt:function abrupt(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,\"finallyLoc\")&&this.prev<o.finallyLoc){var i=o;break;}}i&&(\"break\"===t||\"continue\"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method=\"next\",this.next=i.finallyLoc,y):this.complete(a);},complete:function complete(t,e){if(\"throw\"===t.type)throw t.arg;return\"break\"===t.type||\"continue\"===t.type?this.next=t.arg:\"return\"===t.type?(this.rval=this.arg=t.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===t.type&&e&&(this.next=e),y;},finish:function finish(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),resetTryEntry(r),y;}},catch:function _catch(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if(\"throw\"===n.type){var o=n.arg;resetTryEntry(r);}return o;}}throw new Error(\"illegal catch attempt\");},delegateYield:function delegateYield(e,r,n){return this.delegate={iterator:values(e),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=t),y;}},e;}import{useEffect,useLayoutEffect,useMemo,useRef,useState}from'react';import{walkCategories}from'./api/catalog';import{customStyleToLineStringTemplate,customStyleToPointTemplate,customStyleToPolygonTemplate,DEFAULT_LINESTRING_STYLE,DEFAULT_POINT_STYLE,DEFAULT_POLYGON_STYLE,getCustomStyle,WEB_COLORS}from'./utils/mapStyling';import CityOS__Takamatsu from'./cityos/cityos_takamatsu';import mapStyle from'./style.json';var LAYER_TEMPLATES=[[\"Polygon\",function(i,customStyle){var color=WEB_COLORS[i*1999%WEB_COLORS.length];return customStyle?customStyle.flatMap(function(style){return customStyleToPolygonTemplate(style,color);}):DEFAULT_POLYGON_STYLE(color);}],[\"LineString\",function(i,customStyle){var color=WEB_COLORS[i*1999%WEB_COLORS.length];return customStyle?customStyle.flatMap(function(style){return customStyleToLineStringTemplate(style,color);}):DEFAULT_LINESTRING_STYLE(color);}],[\"Point\",function(i,customStyle){var color=WEB_COLORS[i*1999%WEB_COLORS.length];return customStyle?customStyle.flatMap(function(style){return customStyleToPointTemplate(style,color);}):DEFAULT_POINT_STYLE(color);}]];var MainMap=function MainMap(_ref){var catalogData=_ref.catalogData,selectedLayers=_ref.selectedLayers,setSelectedFeatures=_ref.setSelectedFeatures;var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),map=_useState2[0],setMap=_useState2[1];var _useState3=useState(undefined),_useState4=_slicedToArray(_useState3,2),cityOS=_useState4[0],setCityOS=_useState4[1];var mapContainer=useRef(null);var catalogDataItems=useMemo(function(){return _toConsumableArray(walkCategories(catalogData));},[catalogData]);useLayoutEffect(function(){var map=new window.geolonia.Map({container:mapContainer.current,// style: `${process.env.PUBLIC_URL}/style.json`,\nstyle:mapStyle,hash:true,center:[134.0403,34.334],fitBoundsOptions:{padding:50},// 意図せず傾き・回転を変更してしまうことを防ぐ\nmaxPitch:0,maxRotate:0,minZoom:9,zoom:9.2});window._mainMap=map;var cityOS=new CityOS__Takamatsu(map);setCityOS(cityOS);map.on(\"load\",function(){// start GSI base map modification\nvar _iterator=_createForOfIteratorHelper(map.getStyle().layers),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var layer=_step.value;var id=layer.id;if(id.startsWith(\"oc-\")||id==='poi-z16'||id==='poi-z16-primary'||(layer.metadata||{})['visible-on-3d']){map.removeLayer(layer.id);}else if(\"source-layer\"in layer){var sl=layer[\"source-layer\"];if(sl===\"landcover\"||sl===\"landuse\"||sl===\"building\"){map.removeLayer(layer.id);}}}// end GSI base map modification\n}catch(err){_iterator.e(err);}finally{_iterator.f();}map.addSource('negative-city-mask',{type:'vector',url:'https://tileserver.geolonia.com/takamatsu_negative_mask/tiles.json?key=YOUR-API-KEY'});map.addLayer({id:'negative-city-mask-layer',source:'negative-city-mask','source-layer':'negativecitymask',type:'fill',paint:{'fill-color':'#0079C4','fill-opacity':.3}});map.addLayer({id:'negative-city-mask-layer-border',source:'negative-city-mask','source-layer':'negativecitymask',type:'line',paint:{'line-color':'#0079C4','line-opacity':0.5,'line-width':2}});map.addSource('takamatsu',{type:'vector',url:\"https://tileserver.geolonia.com/takamatsu_main_v0/tiles.json?key=YOUR-API-KEY\"});map.addSource('kihonzu',{type:'vector',url:\"https://tileserver.geolonia.com/takamatsu_kihonzu_v1/tiles.json?key=YOUR-API-KEY\"});setMap(map);});map.on('click',function(e){var features=map.queryRenderedFeatures(e.point).filter(function(feature){return feature.source==='takamatsu'||feature.source==='kihonzu'||feature.properties._viewer_selectable===true;});if(features.length===0){setSelectedFeatures([]);return;}setSelectedFeatures(features.map(function(feature){var catalogData=catalogDataItems.find(function(item){return item.type===\"DataItem\"&&((feature.source==='takamatsu'||feature.properties._viewer_selectable===true)&&item.class===feature.properties.class||'customDataSource'in item&&item.customDataSource===feature.source);});if(!catalogData){throw new Error(\"Catalog data not available for feature: \".concat(feature));}return{catalog:catalogData,properties:feature.properties};}));});return function(){map.remove();};},[catalogDataItems,mapContainer,setMap,setSelectedFeatures]);useEffect(function(){if(!map)return;var shouldStop=false;_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var index,_iterator2,_step2,_loop,_ret;return _regeneratorRuntime().wrap(function _callee$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:index=-1;_iterator2=_createForOfIteratorHelper(walkCategories(catalogData));_context3.prev=2;_loop=/*#__PURE__*/_regeneratorRuntime().mark(function _loop(){var definition,definitionId,isSelected,color,sourceId,geojsonEndpoint,mapSource,geojsonResp,geojson,_iterator3,_step3,feature,_loop2,_i,_LAYER_TEMPLATES;return _regeneratorRuntime().wrap(function _loop$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:definition=_step2.value;index+=1;if(!shouldStop){_context2.next=4;break;}return _context2.abrupt(\"return\",{v:void 0});case 4:definitionId=definition.id;isSelected=selectedLayers.includes(definitionId);if(!(\"liveLocationId\"in definition)){_context2.next=9;break;}if(isSelected){color=WEB_COLORS[index*1999%WEB_COLORS.length];// CityOS SDK will take care of the data fetching\n// and the map will be updated automatically.\n// But we have to add a style layer to the map manually.\nsourceId=cityOS===null||cityOS===void 0?void 0:cityOS.addLiveDataSet(definition.liveLocationId,{featureFilter:function featureFilter(feature){feature.properties||={};feature.properties.class=definition.class;feature.properties._viewer_selectable=true;return feature;}});if(sourceId){map.addLayer({id:\"\".concat(sourceId,\"-points\"),type:'circle',source:sourceId,paint:{'circle-radius':7,'circle-color':color,'circle-opacity':.8,'circle-stroke-width':1,'circle-stroke-color':'gray','circle-stroke-opacity':1}});}}else{cityOS===null||cityOS===void 0?void 0:cityOS.removeLiveDataSet(definition.liveLocationId);}return _context2.abrupt(\"return\",0);case 9:geojsonEndpoint=undefined;if(!(\"geojsonEndpoint\"in definition)){_context2.next=23;break;}// this is a GeoJSON layer\ngeojsonEndpoint=definition.geojsonEndpoint;mapSource=map.getSource(definitionId);if(!(!mapSource&&isSelected)){_context2.next=23;break;}_context2.next=16;return fetch(geojsonEndpoint);case 16:geojsonResp=_context2.sent;_context2.next=19;return geojsonResp.json();case 19:geojson=_context2.sent;_iterator3=_createForOfIteratorHelper(geojson.features);try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){feature=_step3.value;feature.properties.class=definition.class;feature.properties._viewer_selectable=true;}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}map.addSource(definitionId,{type:'geojson',data:geojson});case 23:_loop2=/*#__PURE__*/_regeneratorRuntime().mark(function _loop2(){var _LAYER_TEMPLATES$_i,sublayerName,template,fullLayerName,mapLayers,customStyle,_iterator4,_step4,subtemplate,filterExp,layerConfig,_iterator5,_step5,mapLayer;return _regeneratorRuntime().wrap(function _loop2$(_context){while(1)switch(_context.prev=_context.next){case 0:_LAYER_TEMPLATES$_i=_slicedToArray(_LAYER_TEMPLATES[_i],2),sublayerName=_LAYER_TEMPLATES$_i[0],template=_LAYER_TEMPLATES$_i[1];fullLayerName=\"takamatsu/\".concat(definitionId,\"/\").concat(sublayerName);mapLayers=map.getStyle().layers.filter(function(layer){return layer.id.startsWith(fullLayerName);});customStyle=getCustomStyle(definition);_iterator4=_createForOfIteratorHelper(template(index,customStyle));try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){subtemplate=_step4.value;if(mapLayers.length===0&&isSelected){filterExp=[\"all\",[\"==\",\"$type\",sublayerName]];if(definition.class){filterExp.push([\"==\",\"class\",definition.class]);}if(subtemplate.filter){filterExp.push(subtemplate.filter);}layerConfig=_objectSpread(_objectSpread({},subtemplate),{},{filter:filterExp,id:fullLayerName+subtemplate.id});if(geojsonEndpoint){layerConfig.source=definitionId;delete layerConfig['source-layer'];}else if('customDataSource'in definition){layerConfig.source=definition.customDataSource;layerConfig['source-layer']=definition.customDataSourceLayer||definition.customDataSource;}map.addLayer(layerConfig,'poi');if(!map.getLayer(layerConfig.id)){console.error(\"Failed to add layer \".concat(layerConfig.id,\"!!!\"));debugger;}}else if(mapLayers.length>0&&!isSelected){_iterator5=_createForOfIteratorHelper(mapLayers);try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){mapLayer=_step5.value;map.removeLayer(mapLayer.id);}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}}}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}case 6:case\"end\":return _context.stop();}},_loop2);});_i=0,_LAYER_TEMPLATES=LAYER_TEMPLATES;case 25:if(!(_i<_LAYER_TEMPLATES.length)){_context2.next=30;break;}return _context2.delegateYield(_loop2(),\"t0\",27);case 27:_i++;_context2.next=25;break;case 30:case\"end\":return _context2.stop();}},_loop);});_iterator2.s();case 5:if((_step2=_iterator2.n()).done){_context3.next=14;break;}return _context3.delegateYield(_loop(),\"t0\",7);case 7:_ret=_context3.t0;if(!(_ret===0)){_context3.next=10;break;}return _context3.abrupt(\"continue\",12);case 10:if(!_ret){_context3.next=12;break;}return _context3.abrupt(\"return\",_ret.v);case 12:_context3.next=5;break;case 14:_context3.next=19;break;case 16:_context3.prev=16;_context3.t1=_context3[\"catch\"](2);_iterator2.e(_context3.t1);case 19:_context3.prev=19;_iterator2.f();return _context3.finish(19);case 22:case\"end\":return _context3.stop();}},_callee,null,[[2,16,19,22]]);}))();return function(){shouldStop=true;};},[map,catalogData,selectedLayers,cityOS]);return/*#__PURE__*/React.createElement(\"div\",{className:\"map\",ref:mapContainer,\"data-lang\":\"ja\",\"data-navigation-control\":\"on\",\"data-gesture-handling\":\"off\"});};export default MainMap;","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","useEffect","useLayoutEffect","useMemo","useRef","useState","walkCategories","customStyleToLineStringTemplate","customStyleToPointTemplate","customStyleToPolygonTemplate","DEFAULT_LINESTRING_STYLE","DEFAULT_POINT_STYLE","DEFAULT_POLYGON_STYLE","getCustomStyle","WEB_COLORS","CityOS__Takamatsu","mapStyle","LAYER_TEMPLATES","customStyle","color","flatMap","style","MainMap","_ref","catalogData","selectedLayers","setSelectedFeatures","_useState","undefined","_useState2","_slicedToArray","map","setMap","_useState3","_useState4","cityOS","setCityOS","mapContainer","catalogDataItems","_toConsumableArray","window","geolonia","Map","container","current","hash","center","fitBoundsOptions","padding","maxPitch","maxRotate","minZoom","zoom","_mainMap","on","_iterator","_createForOfIteratorHelper","getStyle","layers","_step","layer","id","startsWith","metadata","removeLayer","sl","err","addSource","url","addLayer","source","paint","features","queryRenderedFeatures","point","filter","feature","properties","_viewer_selectable","find","item","class","customDataSource","concat","catalog","remove","shouldStop","_asyncToGenerator","_callee","index","_iterator2","_step2","_loop","_ret","_callee$","_context3","definition","definitionId","isSelected","sourceId","geojsonEndpoint","mapSource","geojsonResp","geojson","_iterator3","_step3","_loop2","_i","_LAYER_TEMPLATES","_loop$","_context2","includes","addLiveDataSet","liveLocationId","featureFilter","removeLiveDataSet","getSource","fetch","json","data","_LAYER_TEMPLATES$_i","sublayerName","template","fullLayerName","mapLayers","_iterator4","_step4","subtemplate","filterExp","layerConfig","_iterator5","_step5","mapLayer","_loop2$","_context","_objectSpread","customDataSourceLayer","getLayer","console","error","t0","t1","React","createElement","className","ref"],"sources":["/home/magari/git/test_smartmap/src/MainMap.tsx"],"sourcesContent":["import { useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport type * as maplibregl from 'maplibre-gl';\nimport { CatalogFeature, CatalogItem, walkCategories } from './api/catalog';\nimport { CustomStyle, customStyleToLineStringTemplate, customStyleToPointTemplate, customStyleToPolygonTemplate, DEFAULT_LINESTRING_STYLE, DEFAULT_POINT_STYLE, DEFAULT_POLYGON_STYLE, getCustomStyle, LayerTemplate, WEB_COLORS } from './utils/mapStyling';\nimport CityOS__Takamatsu from './cityos/cityos_takamatsu';\n\nimport mapStyle from './style.json';\n\ndeclare global {\n  interface Window {\n    geolonia: any;\n  }\n}\n\nconst LAYER_TEMPLATES: [string, (idx: number, customStyle?: CustomStyle[]) => LayerTemplate[]][] = [\n  [ \"Polygon\", (i, customStyle) => {\n    const color = WEB_COLORS[i * 1999 % WEB_COLORS.length];\n    return customStyle ?\n      customStyle.flatMap((style) => customStyleToPolygonTemplate(style, color)) :\n      DEFAULT_POLYGON_STYLE(color);\n  } ],\n  [ \"LineString\", (i, customStyle) => {\n    const color = WEB_COLORS[i * 1999 % WEB_COLORS.length];\n    return customStyle ?\n      customStyle.flatMap((style) => customStyleToLineStringTemplate(style, color)) :\n      DEFAULT_LINESTRING_STYLE(color);\n  }],\n  [ \"Point\", (i, customStyle) => {\n    const color = WEB_COLORS[i * 1999 % WEB_COLORS.length];\n    return customStyle ?\n      customStyle.flatMap((style) => customStyleToPointTemplate(style, color)) :\n      DEFAULT_POINT_STYLE(color);\n  }],\n];\n\ninterface Props {\n  catalogData: CatalogItem[];\n  selectedLayers: string[];\n  setSelectedFeatures: React.Dispatch<React.SetStateAction<CatalogFeature[]>>\n}\n\nconst MainMap: React.FC<Props> = ({catalogData, selectedLayers, setSelectedFeatures}) => {\n  const [map, setMap] = useState<maplibregl.Map | undefined>(undefined);\n  const [cityOS, setCityOS] = useState<CityOS__Takamatsu | undefined>(undefined);\n  const mapContainer = useRef<HTMLDivElement>(null);\n\n  const catalogDataItems = useMemo(() => {\n    return [...walkCategories(catalogData)];\n  }, [catalogData]);\n\n  useLayoutEffect(() => {\n    const map: maplibregl.Map = new window.geolonia.Map({\n      container: mapContainer.current,\n      // style: `${process.env.PUBLIC_URL}/style.json`,\n      style: mapStyle,\n      hash: true,\n      center: [ 134.0403, 34.334 ],\n      fitBoundsOptions: { padding: 50 },\n      // 意図せず傾き・回転を変更してしまうことを防ぐ\n      maxPitch: 0,\n      maxRotate: 0,\n      minZoom: 9,\n      zoom: 9.2,\n    });\n\n    (window as any)._mainMap = map;\n\n    const cityOS = new CityOS__Takamatsu(map);\n    setCityOS(cityOS);\n\n    map.on(\"load\", () => {\n      // start GSI base map modification\n      for (const layer of map.getStyle().layers!) {\n        const id = layer.id;\n        if (id.startsWith(\"oc-\") || id === 'poi-z16' || id === 'poi-z16-primary' || (layer.metadata as any || {})['visible-on-3d']) {\n          map.removeLayer(layer.id);\n        } else if (\"source-layer\" in layer) {\n          const sl = layer[\"source-layer\"];\n          if (sl === \"landcover\" || sl === \"landuse\" || sl === \"building\") {\n            map.removeLayer(layer.id);\n          }\n        }\n      }\n      // end GSI base map modification\n\n      map.addSource('negative-city-mask', {\n        type: 'vector',\n        url: 'https://tileserver.geolonia.com/takamatsu_negative_mask/tiles.json?key=YOUR-API-KEY',\n      })\n      map.addLayer({\n        id: 'negative-city-mask-layer',\n        source: 'negative-city-mask',\n        'source-layer': 'negativecitymask',\n        type: 'fill',\n        paint: {\n          'fill-color': '#0079C4',\n          'fill-opacity': .3,\n        }\n      });\n      map.addLayer({\n        id: 'negative-city-mask-layer-border',\n        source: 'negative-city-mask',\n        'source-layer': 'negativecitymask',\n        type: 'line',\n        paint: {\n          'line-color': '#0079C4',\n          'line-opacity': 0.5,\n          'line-width': 2,\n        }\n      })\n\n      map.addSource('takamatsu', {\n        type: 'vector',\n        url: \"https://tileserver.geolonia.com/takamatsu_main_v0/tiles.json?key=YOUR-API-KEY\"\n      });\n      map.addSource('kihonzu', {\n        type: 'vector',\n        url: \"https://tileserver.geolonia.com/takamatsu_kihonzu_v1/tiles.json?key=YOUR-API-KEY\"\n      });\n\n      setMap(map);\n    });\n\n    map.on('click', (e) => {\n      const features = map\n        .queryRenderedFeatures(e.point)\n        .filter(feature => (\n          feature.source === 'takamatsu' ||\n          feature.source === 'kihonzu' ||\n          feature.properties._viewer_selectable === true\n        ));\n      if (features.length === 0) {\n        setSelectedFeatures([]);\n        return;\n      }\n      setSelectedFeatures(features.map(feature => {\n        const catalogData = catalogDataItems.find(item => (\n          item.type === \"DataItem\" && (\n            ((feature.source === 'takamatsu' || feature.properties._viewer_selectable === true) && item.class === feature.properties.class) ||\n            ('customDataSource' in item && item.customDataSource === feature.source)\n          )\n        ));\n        if (!catalogData) {\n          throw new Error(`Catalog data not available for feature: ${feature}`);\n        }\n        return {\n          catalog: catalogData,\n          properties: feature.properties,\n        };\n      }));\n    });\n\n    return () => {\n      map.remove();\n    };\n  }, [catalogDataItems, mapContainer, setMap, setSelectedFeatures]);\n\n  useEffect(() => {\n    if (!map) return;\n\n    let shouldStop = false;\n    (async () => {\n      let index = -1;\n      for (const definition of walkCategories(catalogData)) {\n        index += 1;\n        if (shouldStop) return;\n\n        const definitionId = definition.id;\n        const isSelected = selectedLayers.includes(definitionId);\n\n        if (\"liveLocationId\" in definition) {\n          if (isSelected) {\n            const color = WEB_COLORS[index * 1999 % WEB_COLORS.length];\n            // CityOS SDK will take care of the data fetching\n            // and the map will be updated automatically.\n            // But we have to add a style layer to the map manually.\n            const sourceId = cityOS?.addLiveDataSet(definition.liveLocationId, {\n              featureFilter: (feature) => {\n                feature.properties ||= {};\n                feature.properties.class = definition.class;\n                feature.properties!._viewer_selectable = true;\n                return feature;\n              }\n            });\n            if (sourceId) {\n              map.addLayer({\n                id: `${sourceId}-points`,\n                type: 'circle',\n                source: sourceId,\n                paint: {\n                  'circle-radius': 7,\n                  'circle-color': color,\n                  'circle-opacity': .8,\n                  'circle-stroke-width': 1,\n                  'circle-stroke-color': 'gray',\n                  'circle-stroke-opacity': 1,\n                }\n              });\n            }\n          } else {\n            cityOS?.removeLiveDataSet(definition.liveLocationId);\n          }\n          continue;\n        }\n\n        let geojsonEndpoint: string | undefined = undefined;\n        if (\"geojsonEndpoint\" in definition) {\n          // this is a GeoJSON layer\n          geojsonEndpoint = definition.geojsonEndpoint;\n\n          const mapSource = map.getSource(definitionId);\n          if (!mapSource && isSelected) {\n            const geojsonResp = await fetch(geojsonEndpoint);\n            const geojson = await geojsonResp.json();\n            for (const feature of geojson.features) {\n              feature.properties.class = definition.class;\n              feature.properties._viewer_selectable = true;\n            }\n            map.addSource(definitionId, {\n              type: 'geojson',\n              data: geojson,\n            });\n          }\n        }\n\n        for (const [sublayerName, template] of LAYER_TEMPLATES) {\n          const fullLayerName = `takamatsu/${definitionId}/${sublayerName}`;\n          const mapLayers = map.getStyle().layers.filter((layer) => layer.id.startsWith(fullLayerName));\n          const customStyle = getCustomStyle(definition);\n          for (const subtemplate of template(index, customStyle)) {\n            if (mapLayers.length === 0 && isSelected) {\n              const filterExp: maplibregl.FilterSpecification = [\"all\", [\"==\", \"$type\", sublayerName]];\n              if (definition.class) {\n                filterExp.push([\"==\", \"class\", definition.class]);\n              }\n              if (subtemplate.filter) {\n                filterExp.push(subtemplate.filter as any);\n              }\n              const layerConfig: maplibregl.LayerSpecification = {\n                ...subtemplate,\n                filter: filterExp,\n                id: fullLayerName + subtemplate.id,\n              };\n              if (geojsonEndpoint) {\n                layerConfig.source = definitionId;\n                delete layerConfig['source-layer'];\n              } else if ('customDataSource' in definition) {\n                layerConfig.source = definition.customDataSource;\n                layerConfig['source-layer'] = definition.customDataSourceLayer || definition.customDataSource;\n              }\n              map.addLayer(layerConfig, 'poi');\n              if (!map.getLayer(layerConfig.id)) {\n                console.error(`Failed to add layer ${layerConfig.id}!!!`);\n                debugger;\n              }\n            } else if (mapLayers.length > 0 && !isSelected) {\n              for (const mapLayer of mapLayers) {\n                map.removeLayer(mapLayer.id);\n              }\n            }\n          }\n        }\n      }\n    })();\n\n    return () => {\n      shouldStop = true;\n    }\n  }, [map, catalogData, selectedLayers, cityOS]);\n\n  return (\n    <div\n      className='map'\n      ref={mapContainer}\n      data-lang=\"ja\"\n      data-navigation-control=\"on\"\n      data-gesture-handling=\"off\"\n    ></div>\n  );\n}\n\nexport default MainMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}