{"ast":null,"code":"import _regeneratorRuntime from\"/home/magari/git/test_smartmap/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/magari/git/test_smartmap/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"/home/magari/git/test_smartmap/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _createClass from\"/home/magari/git/test_smartmap/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/home/magari/git/test_smartmap/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _inherits from\"/home/magari/git/test_smartmap/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/magari/git/test_smartmap/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _wrapNativeSuper from\"/home/magari/git/test_smartmap/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";import _objectSpread from\"/home/magari/git/test_smartmap/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{Space}from\"@spatial-id/javascript-sdk\";import websocket from\"./websocket\";var WS_HTTP_URL=\"https://api-ws-admin.geolonia.com/\".concat(process.env.REACT_APP_API_STAGE||'dev');var dataToGeoJSONFeature=function dataToGeoJSONFeature(data){var geometry;if(typeof data.msg.coords!=='undefined'){geometry={type:\"Point\",coordinates:data.msg.coords};}else{geometry=new Space(data.tilehash).toGeoJSON();}return{type:\"Feature\",id:data.id,properties:_objectSpread({tilehash:data.tilehash,zfxy:data.zfxy,ttl:data.ttl},data.msg),geometry:geometry};};export var LiveDataSetEvent=/*#__PURE__*/function(_CustomEvent){_inherits(LiveDataSetEvent,_CustomEvent);var _super=_createSuper(LiveDataSetEvent);function LiveDataSetEvent(){_classCallCheck(this,LiveDataSetEvent);return _super.apply(this,arguments);}return _createClass(LiveDataSetEvent);}(/*#__PURE__*/_wrapNativeSuper(CustomEvent));var LiveDataSet=/*#__PURE__*/function(_EventTarget){_inherits(LiveDataSet,_EventTarget);var _super2=_createSuper(LiveDataSet);function LiveDataSet(id){var _this;_classCallCheck(this,LiveDataSet);_this=_super2.call(this);_this.id=void 0;_this.features=void 0;_this._internalPingTimeout=void 0;_this._wsMessageHandler=void 0;_this.id=id;_this.features=[];_this._wsMessageHandler=function(data){var newFeature=dataToGeoJSONFeature(data);_this.features=[].concat(_toConsumableArray(_this.features.filter(function(feat){return feat.id!==data.id;})),[newFeature]);_this.dispatchEvent(new LiveDataSetEvent('featuresUpdated',{detail:{features:_this.features}}));};websocket.subscribe(_this.id,_this._wsMessageHandler);_this._retrieveInitialDataSet().catch(function(e){// ignore error for now\nconsole.warn(\"Initial data set couldn't be loaded:\",e);});_this._internalPing();return _this;}/** Call this when you no longer want to use this LiveDataSet. */_createClass(LiveDataSet,[{key:\"remove\",value:function remove(){if(this._internalPingTimeout)window.clearTimeout(this._internalPingTimeout);websocket.unsubscribe(this.id,this._wsMessageHandler);}},{key:\"_filterFeaturesByTTL\",value:function _filterFeaturesByTTL(nowTs){var now=typeof nowTs==='undefined'?Math.floor(new Date().getTime()/1000):nowTs;var filteredFeatures=this.features.filter(function(feat){var _feat$properties,_feat$properties2;return!((_feat$properties=feat.properties)!==null&&_feat$properties!==void 0&&_feat$properties.ttl)||((_feat$properties2=feat.properties)===null||_feat$properties2===void 0?void 0:_feat$properties2.ttl)>=now;});if(filteredFeatures.length!==this.features.length){this.features=filteredFeatures;this.dispatchEvent(new LiveDataSetEvent('featuresUpdated',{detail:{features:this.features}}));}}},{key:\"_internalPing\",value:function _internalPing(){this._filterFeaturesByTTL();this._internalPingTimeout=window.setTimeout(this._internalPing.bind(this),300);}},{key:\"_retrieveInitialDataSet\",value:function(){var _retrieveInitialDataSet2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var initialDataResp,initialDataJson;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(WS_HTTP_URL,\"/channels/\").concat(this.id,\"/messages\"));case 2:initialDataResp=_context.sent;_context.next=5;return initialDataResp.json();case 5:initialDataJson=_context.sent;this.features=initialDataJson.data.map(function(data){return dataToGeoJSONFeature(data);});this.dispatchEvent(new LiveDataSetEvent('featuresUpdated',{detail:{features:this.features}}));case 8:case\"end\":return _context.stop();}},_callee,this);}));function _retrieveInitialDataSet(){return _retrieveInitialDataSet2.apply(this,arguments);}return _retrieveInitialDataSet;}()}]);return LiveDataSet;}(/*#__PURE__*/_wrapNativeSuper(EventTarget));export{LiveDataSet as default};","map":{"version":3,"names":["Space","websocket","WS_HTTP_URL","concat","process","env","REACT_APP_API_STAGE","dataToGeoJSONFeature","data","geometry","msg","coords","type","coordinates","tilehash","toGeoJSON","id","properties","_objectSpread","zfxy","ttl","LiveDataSetEvent","_CustomEvent","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","_wrapNativeSuper","CustomEvent","LiveDataSet","_EventTarget","_super2","_this","call","features","_internalPingTimeout","_wsMessageHandler","newFeature","_toConsumableArray","filter","feat","dispatchEvent","detail","subscribe","_retrieveInitialDataSet","catch","e","console","warn","_internalPing","key","value","remove","window","clearTimeout","unsubscribe","_filterFeaturesByTTL","nowTs","now","Math","floor","Date","getTime","filteredFeatures","_feat$properties","_feat$properties2","length","setTimeout","bind","_retrieveInitialDataSet2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","initialDataResp","initialDataJson","wrap","_callee$","_context","prev","next","fetch","sent","json","map","stop","EventTarget","default"],"sources":["/home/magari/git/test_smartmap/src/cityos/lib/live_data_set.ts"],"sourcesContent":["import { Space } from \"@spatial-id/javascript-sdk\";\nimport websocket, { MessageCallbackFunc } from \"./websocket\";\nimport type GeoJSON from \"geojson\";\n\nconst WS_HTTP_URL = `https://api-ws-admin.geolonia.com/${process.env.REACT_APP_API_STAGE || 'dev'}`;\n\nconst dataToGeoJSONFeature: (data: any) => GeoJSON.Feature = (data) => {\n  let geometry: GeoJSON.Geometry;\n  if (typeof data.msg.coords !== 'undefined') {\n    geometry = { type: \"Point\", coordinates: data.msg.coords };\n  } else {\n    geometry = new Space(data.tilehash).toGeoJSON();\n  }\n  return {\n    type: \"Feature\",\n    id: data.id,\n    properties: {\n      tilehash: data.tilehash,\n      zfxy: data.zfxy,\n      ttl: data.ttl,\n      ...data.msg,\n    },\n    geometry,\n  };\n};\n\ntype LiveDataSetEventDetail = {\n  features: GeoJSON.Feature[];\n}\nexport class LiveDataSetEvent extends CustomEvent<LiveDataSetEventDetail> {}\n\nexport default class LiveDataSet extends EventTarget {\n  id: string;\n  features: GeoJSON.Feature[];\n\n  private _internalPingTimeout: number | undefined;\n  private _wsMessageHandler: MessageCallbackFunc;\n\n  constructor(id: string) {\n    super();\n\n    this.id = id;\n    this.features = [];\n    this._wsMessageHandler = (data) => {\n      const newFeature = dataToGeoJSONFeature(data);\n      this.features = [\n        ...this.features.filter((feat) => feat.id !== data.id),\n        newFeature,\n      ];\n      this.dispatchEvent(new LiveDataSetEvent('featuresUpdated', { detail: { features: this.features } }));\n    };\n    websocket.subscribe(this.id, this._wsMessageHandler);\n    this._retrieveInitialDataSet().catch(e => {\n      // ignore error for now\n      console.warn(`Initial data set couldn't be loaded:`, e);\n    });\n\n    this._internalPing();\n  }\n\n  /** Call this when you no longer want to use this LiveDataSet. */\n  remove() {\n    if (this._internalPingTimeout) window.clearTimeout(this._internalPingTimeout);\n    websocket.unsubscribe(this.id, this._wsMessageHandler);\n  }\n\n  private _filterFeaturesByTTL(nowTs?: number) {\n    const now = typeof nowTs === 'undefined' ? Math.floor(new Date().getTime() / 1000) : nowTs;\n    const filteredFeatures = this.features.filter((feat) => (\n      !feat.properties?.ttl || (feat.properties?.ttl >= now)\n    ));\n    if (filteredFeatures.length !== this.features.length) {\n      this.features = filteredFeatures;\n      this.dispatchEvent(new LiveDataSetEvent('featuresUpdated', { detail: { features: this.features } }));\n    }\n  }\n\n  private _internalPing() {\n    this._filterFeaturesByTTL();\n    this._internalPingTimeout = window.setTimeout(this._internalPing.bind(this), 300);\n  }\n\n  private async _retrieveInitialDataSet() {\n    const initialDataResp = await fetch(`${WS_HTTP_URL}/channels/${this.id}/messages`);\n    const initialDataJson = await initialDataResp.json();\n\n    this.features = initialDataJson.data.map((data: any) => {\n      return dataToGeoJSONFeature(data);\n    });\n    this.dispatchEvent(new LiveDataSetEvent('featuresUpdated', { detail: { features: this.features } }));\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}